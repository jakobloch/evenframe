
[2m2025-08-15T00:20:40.985342Z[0m [32m INFO[0m [2mevenframe[0m[2m:[0m Starting Evenframe code generation
[2m2025-08-15T00:20:40.985419Z[0m [34mDEBUG[0m [2mevenframe[0m[2m:[0m Loading configuration...
[2m2025-08-15T00:20:40.985475Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:40.986348Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:40.986404Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:40.986454Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:40.986800Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:40.987764Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:40.987793Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:40.990500Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:40.990539Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:40.992353Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:40.992389Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:40.994133Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:40.994173Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:40.994247Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:40.994283Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:40.994305Z[0m [32m INFO[0m [2mevenframe[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:40.994324Z[0m [34mDEBUG[0m [2mevenframe[0m[2m:[0m Configuration flags - mocks: true, arktype: false, effect: true
[2m2025-08-15T00:20:40.994342Z[0m [32m INFO[0m [2mevenframe[0m[2m:[0m Building all configs...
[2m2025-08-15T00:20:40.994362Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Starting build_all_configs
[2m2025-08-15T00:20:40.994380Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:40.994572Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:40.994597Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:40.994620Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:40.994667Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:40.995214Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:40.995236Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:40.996958Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:40.996986Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:40.998666Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:40.998689Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.000338Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.000360Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.000393Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.000408Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.000432Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Creating workspace scanner
[2m2025-08-15T00:20:41.000475Z[0m [32m INFO[0m [2mevenframe::workspace_scanner[0m[2m:[0m Starting workspace scan for Evenframe types
[2m2025-08-15T00:20:41.000490Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Scanning path: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib"
[2m2025-08-15T00:20:41.014150Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Order' in module 'handlers::order' (has_id: true)
[2m2025-08-15T00:20:41.014253Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'BilledItem' in module 'handlers::order' (has_id: false)
[2m2025-08-15T00:20:41.014287Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'Item' in module 'handlers::order'
[2m2025-08-15T00:20:41.014315Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Payment' in module 'handlers::order' (has_id: true)
[2m2025-08-15T00:20:41.014348Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Package' in module 'handlers::order' (has_id: true)
[2m2025-08-15T00:20:41.014378Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Promotion' in module 'handlers::order' (has_id: true)
[2m2025-08-15T00:20:41.014404Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'OrderStage' in module 'handlers::order'
[2m2025-08-15T00:20:41.014429Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 7 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/order.rs"
[2m2025-08-15T00:20:41.015308Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Route' in module 'handlers::route' (has_id: true)
[2m2025-08-15T00:20:41.015361Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 1 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/route.rs"
[2m2025-08-15T00:20:41.016532Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Company' in module 'handlers::company' (has_id: true)
[2m2025-08-15T00:20:41.016595Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 1 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/company.rs"
[2m2025-08-15T00:20:41.026505Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Service' in module 'handlers::service' (has_id: true)
[2m2025-08-15T00:20:41.026575Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'ServiceDefaults' in module 'handlers::service' (has_id: false)
[2m2025-08-15T00:20:41.026602Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 2 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/service.rs"
[2m2025-08-15T00:20:41.028962Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Settings' in module 'handlers::user' (has_id: false)
[2m2025-08-15T00:20:41.029029Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'AppointmentNotifications' in module 'handlers::user' (has_id: false)
[2m2025-08-15T00:20:41.029059Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Commissions' in module 'handlers::user' (has_id: false)
[2m2025-08-15T00:20:41.029091Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'User' in module 'handlers::user' (has_id: true)
[2m2025-08-15T00:20:41.029137Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Metadata' in module 'handlers::user' (has_id: false)
[2m2025-08-15T00:20:41.029174Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'UserRole' in module 'handlers::user'
[2m2025-08-15T00:20:41.029199Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'AppPermissions' in module 'handlers::user' (has_id: false)
[2m2025-08-15T00:20:41.029239Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'Applications' in module 'handlers::user'
[2m2025-08-15T00:20:41.029261Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'Page' in module 'handlers::user'
[2m2025-08-15T00:20:41.029282Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 9 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/user.rs"
[2m2025-08-15T00:20:41.032888Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'Table' in module 'handlers::db'
[2m2025-08-15T00:20:41.032946Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 1 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/db.rs"
[2m2025-08-15T00:20:41.034616Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Account' in module 'handlers::account' (has_id: true)
[2m2025-08-15T00:20:41.034687Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Ordered' in module 'handlers::account' (has_id: true)
[2m2025-08-15T00:20:41.034725Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'AccountName' in module 'handlers::account'
[2m2025-08-15T00:20:41.034750Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 3 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/account.rs"
[2m2025-08-15T00:20:41.038506Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'TaxRate' in module 'handlers::tax_rate' (has_id: true)
[2m2025-08-15T00:20:41.038554Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 1 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/tax_rate.rs"
[2m2025-08-15T00:20:41.040345Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'RecurrenceRule' in module 'handlers::appointment' (has_id: false)
[2m2025-08-15T00:20:41.040393Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'Interval' in module 'handlers::appointment'
[2m2025-08-15T00:20:41.040423Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'RecurrenceEnd' in module 'handlers::appointment'
[2m2025-08-15T00:20:41.040446Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'IntervalUnit' in module 'handlers::appointment'
[2m2025-08-15T00:20:41.040470Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'WeekOfMonth' in module 'handlers::appointment'
[2m2025-08-15T00:20:41.040490Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'Weekday' in module 'handlers::appointment'
[2m2025-08-15T00:20:41.040530Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'Status' in module 'handlers::appointment'
[2m2025-08-15T00:20:41.040556Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Colors' in module 'handlers::appointment' (has_id: false)
[2m2025-08-15T00:20:41.040583Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Appointment' in module 'handlers::appointment' (has_id: true)
[2m2025-08-15T00:20:41.040621Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 9 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/appointment.rs"
[2m2025-08-15T00:20:41.041525Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Product' in module 'handlers::product' (has_id: true)
[2m2025-08-15T00:20:41.041579Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'ProductDefaults' in module 'handlers::product' (has_id: false)
[2m2025-08-15T00:20:41.041602Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 2 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/product.rs"
[2m2025-08-15T00:20:41.042945Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Employee' in module 'handlers::employee' (has_id: true)
[2m2025-08-15T00:20:41.043012Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Represents' in module 'handlers::employee' (has_id: true)
[2m2025-08-15T00:20:41.043053Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 2 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/employee.rs"
[2m2025-08-15T00:20:41.053725Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Color' in module 'handlers::validation::account_validation' (has_id: false)
[2m2025-08-15T00:20:41.053821Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'Sector' in module 'handlers::validation::account_validation'
[2m2025-08-15T00:20:41.053854Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'PhoneNumber' in module 'handlers::validation::account_validation' (has_id: false)
[2m2025-08-15T00:20:41.053883Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Number' in module 'handlers::validation::account_validation' (has_id: false)
[2m2025-08-15T00:20:41.053963Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Coordinates' in module 'handlers::validation::account_validation' (has_id: false)
[2m2025-08-15T00:20:41.053996Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Site' in module 'handlers::validation::account_validation' (has_id: true)
[2m2025-08-15T00:20:41.054031Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Address' in module 'handlers::validation::account_validation' (has_id: false)
[2m2025-08-15T00:20:41.054100Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 7 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/validation/account_validation.rs"
[2m2025-08-15T00:20:41.060511Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Email' in module 'handlers::validation::auth_validation' (has_id: false)
[2m2025-08-15T00:20:41.060617Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Password' in module 'handlers::validation::auth_validation' (has_id: false)
[2m2025-08-15T00:20:41.060690Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'LastName' in module 'handlers::validation::auth_validation' (has_id: false)
[2m2025-08-15T00:20:41.060770Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'FirstName' in module 'handlers::validation::auth_validation' (has_id: false)
[2m2025-08-15T00:20:41.060830Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'SignUpCredentials' in module 'handlers::validation::auth_validation' (has_id: false)
[2m2025-08-15T00:20:41.060874Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 5 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/validation/auth_validation.rs"
[2m2025-08-15T00:20:41.062697Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe struct 'Lead' in module 'handlers::lead' (has_id: true)
[2m2025-08-15T00:20:41.062779Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'Priority' in module 'handlers::lead'
[2m2025-08-15T00:20:41.062803Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'LeadStage' in module 'handlers::lead'
[2m2025-08-15T00:20:41.062829Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found Evenframe enum 'NextStep' in module 'handlers::lead'
[2m2025-08-15T00:20:41.062848Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Found 4 Evenframe types in "/Users/jakoblochinski/Softworks/GitHub/avel/backend/handlers/src/lib/lead.rs"
[2m2025-08-15T00:20:41.062883Z[0m [32m INFO[0m [2mevenframe::workspace_scanner[0m[2m:[0m Workspace scan complete. Found 54 Evenframe types
[2m2025-08-15T00:20:41.062913Z[0m [34mDEBUG[0m [2mevenframe::workspace_scanner[0m[2m:[0m Type breakdown: 37 structs, 17 enums
[2m2025-08-15T00:20:41.062928Z[0m [32m INFO[0m [2mevenframe::config_builders[0m[2m:[0m Found 54 Evenframe types
[2m2025-08-15T00:20:41.062943Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Grouping types by file
[2m2025-08-15T00:20:41.063067Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Grouped into 14 files
[2m2025-08-15T00:20:41.063085Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Starting first pass: parsing structs and enums
[2m2025-08-15T00:20:41.063644Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Product
[2m2025-08-15T00:20:41.063677Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 10 fields for struct Product
[2m2025-08-15T00:20:41.063725Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.063752Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.063773Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.063798Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.063812Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field name
[2m2025-08-15T00:20:41.063825Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field name
[2m2025-08-15T00:20:41.063841Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.063858Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field quick_code
[2m2025-08-15T00:20:41.063870Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field quick_code
[2m2025-08-15T00:20:41.063926Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.063943Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field group
[2m2025-08-15T00:20:41.063955Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field group
[2m2025-08-15T00:20:41.063992Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.064010Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field subgroup
[2m2025-08-15T00:20:41.064024Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field subgroup
[2m2025-08-15T00:20:41.064043Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.064057Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field unit
[2m2025-08-15T00:20:41.064068Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field unit
[2m2025-08-15T00:20:41.064082Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.064098Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field active
[2m2025-08-15T00:20:41.064110Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field active
[2m2025-08-15T00:20:41.064124Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.064136Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field commission
[2m2025-08-15T00:20:41.064147Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field commission
[2m2025-08-15T00:20:41.064161Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.064177Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field favorite
[2m2025-08-15T00:20:41.064188Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field favorite
[2m2025-08-15T00:20:41.064223Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.064244Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field defaults
[2m2025-08-15T00:20:41.064257Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field defaults
[2m2025-08-15T00:20:41.064279Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.064301Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.064550Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Product (snake_case: product)
[2m2025-08-15T00:20:41.064576Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.064600Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.064648Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.064668Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.064836Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.064859Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.064882Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.064928Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.065462Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.065501Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.067251Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.067279Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.068951Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.068978Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.070644Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.070673Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.070709Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.070730Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.070775Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.070798Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 4
[2m2025-08-15T00:20:41.070821Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=4, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.070865Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.070886Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.070910Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.070932Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.071080Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.071108Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.071166Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: ProductDefaults
[2m2025-08-15T00:20:41.071187Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 2 fields for struct ProductDefaults
[2m2025-08-15T00:20:41.071212Z[0m [34mDEBUG[0m [2mevenframe::types::field_type[0m[2m:[0m Found OrderedFloat with inner type
[2m2025-08-15T00:20:41.071233Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.071250Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field price
[2m2025-08-15T00:20:41.071263Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field price
[2m2025-08-15T00:20:41.071284Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.071297Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field description
[2m2025-08-15T00:20:41.071315Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field description
[2m2025-08-15T00:20:41.071333Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.071350Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.071859Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: TaxRate
[2m2025-08-15T00:20:41.071888Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 10 fields for struct TaxRate
[2m2025-08-15T00:20:41.071907Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.071924Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.071937Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.071957Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.071971Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field name
[2m2025-08-15T00:20:41.071987Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field name
[2m2025-08-15T00:20:41.072003Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.072020Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field tax_agency
[2m2025-08-15T00:20:41.072033Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field tax_agency
[2m2025-08-15T00:20:41.072048Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.072065Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field zip
[2m2025-08-15T00:20:41.072076Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field zip
[2m2025-08-15T00:20:41.072095Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.072108Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field city
[2m2025-08-15T00:20:41.072122Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field city
[2m2025-08-15T00:20:41.072140Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.072158Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field county
[2m2025-08-15T00:20:41.072170Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field county
[2m2025-08-15T00:20:41.072185Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.072201Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field state
[2m2025-08-15T00:20:41.072213Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field state
[2m2025-08-15T00:20:41.072231Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.072244Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field is_active
[2m2025-08-15T00:20:41.072259Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field is_active
[2m2025-08-15T00:20:41.072275Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.072291Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field description
[2m2025-08-15T00:20:41.072304Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field description
[2m2025-08-15T00:20:41.072325Z[0m [34mDEBUG[0m [2mevenframe::types::field_type[0m[2m:[0m Found OrderedFloat with inner type
[2m2025-08-15T00:20:41.072361Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.072378Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field tax_components
[2m2025-08-15T00:20:41.072390Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field tax_components
[2m2025-08-15T00:20:41.072407Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.072420Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.072502Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: TaxRate (snake_case: tax_rate)
[2m2025-08-15T00:20:41.072523Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.072540Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.072579Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.072599Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.072766Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.072792Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.072817Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.072865Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.073427Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.073458Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.075191Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.075225Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.076943Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.076972Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.078679Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.078710Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.078769Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.078801Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.078827Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.078845Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 3
[2m2025-08-15T00:20:41.078863Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=3, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.078894Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.078911Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.078947Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.078964Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.079065Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.079087Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.079944Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Company
[2m2025-08-15T00:20:41.079972Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 27 fields for struct Company
[2m2025-08-15T00:20:41.079994Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080011Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.080023Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.080045Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080059Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field legal_name
[2m2025-08-15T00:20:41.080074Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field legal_name
[2m2025-08-15T00:20:41.080104Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080122Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field phones
[2m2025-08-15T00:20:41.080136Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field phones
[2m2025-08-15T00:20:41.080153Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080165Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field fax
[2m2025-08-15T00:20:41.080180Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field fax
[2m2025-08-15T00:20:41.080196Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080211Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field email
[2m2025-08-15T00:20:41.080223Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field email
[2m2025-08-15T00:20:41.080243Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080258Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field website
[2m2025-08-15T00:20:41.080273Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field website
[2m2025-08-15T00:20:41.080289Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080304Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field tax_id
[2m2025-08-15T00:20:41.080317Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field tax_id
[2m2025-08-15T00:20:41.080332Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080347Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field reference_number
[2m2025-08-15T00:20:41.080359Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field reference_number
[2m2025-08-15T00:20:41.080394Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080411Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field postal_code_lookup
[2m2025-08-15T00:20:41.080424Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field postal_code_lookup
[2m2025-08-15T00:20:41.080441Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080457Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field time_zone
[2m2025-08-15T00:20:41.080468Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field time_zone
[2m2025-08-15T00:20:41.080494Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080512Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field default_tax
[2m2025-08-15T00:20:41.080526Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field default_tax
[2m2025-08-15T00:20:41.080541Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080556Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field default_tax_location
[2m2025-08-15T00:20:41.080567Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field default_tax_location
[2m2025-08-15T00:20:41.080586Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080599Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field default_area_code
[2m2025-08-15T00:20:41.080610Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field default_area_code
[2m2025-08-15T00:20:41.080628Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080641Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field default_account_type
[2m2025-08-15T00:20:41.080654Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field default_account_type
[2m2025-08-15T00:20:41.080669Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080681Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field lookup_formatting
[2m2025-08-15T00:20:41.080695Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field lookup_formatting
[2m2025-08-15T00:20:41.080710Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080726Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field account_name_format
[2m2025-08-15T00:20:41.080738Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field account_name_format
[2m2025-08-15T00:20:41.080755Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080772Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field merchant_service_provider
[2m2025-08-15T00:20:41.080783Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field merchant_service_provider
[2m2025-08-15T00:20:41.080802Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080815Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field date_display_style
[2m2025-08-15T00:20:41.080844Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field date_display_style
[2m2025-08-15T00:20:41.080863Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080878Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field has_auto_commission
[2m2025-08-15T00:20:41.080889Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field has_auto_commission
[2m2025-08-15T00:20:41.080906Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080919Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field has_auto_daylight_savings
[2m2025-08-15T00:20:41.080933Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field has_auto_daylight_savings
[2m2025-08-15T00:20:41.080948Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.080960Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field has_auto_fms_tracking
[2m2025-08-15T00:20:41.080974Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field has_auto_fms_tracking
[2m2025-08-15T00:20:41.080989Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.081005Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field has_notifications
[2m2025-08-15T00:20:41.081017Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field has_notifications
[2m2025-08-15T00:20:41.081031Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.081046Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field has_required_lead_source
[2m2025-08-15T00:20:41.081058Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field has_required_lead_source
[2m2025-08-15T00:20:41.081076Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.081088Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field has_required_email
[2m2025-08-15T00:20:41.081102Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field has_required_email
[2m2025-08-15T00:20:41.081119Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.081131Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field has_sort_service_items_alphabetically
[2m2025-08-15T00:20:41.081144Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field has_sort_service_items_alphabetically
[2m2025-08-15T00:20:41.081159Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.081175Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field has_attach_order_to_appointment_emails
[2m2025-08-15T00:20:41.081187Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field has_attach_order_to_appointment_emails
[2m2025-08-15T00:20:41.081202Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.081217Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field schedule_interval
[2m2025-08-15T00:20:41.081228Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field schedule_interval
[2m2025-08-15T00:20:41.081258Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.081275Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.081374Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Company (snake_case: company)
[2m2025-08-15T00:20:41.081395Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.081411Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.081450Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.081469Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.081638Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.081663Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.081688Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.081734Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.082260Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.082283Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.083970Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.083996Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.085659Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.085684Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.087334Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.087359Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.087393Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.087418Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.087440Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.087453Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 1
[2m2025-08-15T00:20:41.087470Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=1, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.087505Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.087522Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.087534Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.087546Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.087642Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.087680Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.091038Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: Table
[2m2025-08-15T00:20:41.092840Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Order
[2m2025-08-15T00:20:41.092875Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 29 fields for struct Order
[2m2025-08-15T00:20:41.092898Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.092916Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.092929Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.092961Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.092980Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field account
[2m2025-08-15T00:20:41.092996Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field account
[2m2025-08-15T00:20:41.093017Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093034Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field stage
[2m2025-08-15T00:20:41.093046Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field stage
[2m2025-08-15T00:20:41.093065Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093079Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field number
[2m2025-08-15T00:20:41.093090Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field number
[2m2025-08-15T00:20:41.093113Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093131Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field payments
[2m2025-08-15T00:20:41.093144Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field payments
[2m2025-08-15T00:20:41.093163Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093179Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field opportunity
[2m2025-08-15T00:20:41.093193Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field opportunity
[2m2025-08-15T00:20:41.093210Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093222Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field reference
[2m2025-08-15T00:20:41.093236Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field reference
[2m2025-08-15T00:20:41.093251Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093266Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field lead_source
[2m2025-08-15T00:20:41.093278Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field lead_source
[2m2025-08-15T00:20:41.093300Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093318Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field sales_rep
[2m2025-08-15T00:20:41.093354Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field sales_rep
[2m2025-08-15T00:20:41.093378Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093392Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field group
[2m2025-08-15T00:20:41.093403Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field group
[2m2025-08-15T00:20:41.093417Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093428Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field subgroup
[2m2025-08-15T00:20:41.093439Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field subgroup
[2m2025-08-15T00:20:41.093452Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093464Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field is_posted
[2m2025-08-15T00:20:41.093474Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field is_posted
[2m2025-08-15T00:20:41.093488Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093500Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field needs_review
[2m2025-08-15T00:20:41.093510Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field needs_review
[2m2025-08-15T00:20:41.093524Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093535Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field action_item
[2m2025-08-15T00:20:41.093546Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field action_item
[2m2025-08-15T00:20:41.093560Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093572Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field upsale
[2m2025-08-15T00:20:41.093583Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field upsale
[2m2025-08-15T00:20:41.093599Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093611Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field date_created
[2m2025-08-15T00:20:41.093622Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field date_created
[2m2025-08-15T00:20:41.093643Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093657Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field appointment
[2m2025-08-15T00:20:41.093669Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field appointment
[2m2025-08-15T00:20:41.093693Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093707Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field last_techs
[2m2025-08-15T00:20:41.093719Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field last_techs
[2m2025-08-15T00:20:41.093743Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093758Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field package
[2m2025-08-15T00:20:41.093783Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field package
[2m2025-08-15T00:20:41.093809Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093828Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field promotion
[2m2025-08-15T00:20:41.093843Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field promotion
[2m2025-08-15T00:20:41.093859Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093872Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field balance
[2m2025-08-15T00:20:41.093882Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field balance
[2m2025-08-15T00:20:41.093898Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093915Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field due
[2m2025-08-15T00:20:41.093930Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field due
[2m2025-08-15T00:20:41.093946Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.093959Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field total
[2m2025-08-15T00:20:41.093970Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field total
[2m2025-08-15T00:20:41.094067Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.094085Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field site
[2m2025-08-15T00:20:41.094098Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field site
[2m2025-08-15T00:20:41.094120Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.094134Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field billed_items
[2m2025-08-15T00:20:41.094145Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field billed_items
[2m2025-08-15T00:20:41.094159Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.094171Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field memo
[2m2025-08-15T00:20:41.094182Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field memo
[2m2025-08-15T00:20:41.094195Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.094207Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field discount
[2m2025-08-15T00:20:41.094218Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field discount
[2m2025-08-15T00:20:41.094231Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.094243Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field tip
[2m2025-08-15T00:20:41.094253Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field tip
[2m2025-08-15T00:20:41.094270Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.094282Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field commissions
[2m2025-08-15T00:20:41.094307Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field commissions
[2m2025-08-15T00:20:41.094321Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.094335Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.094418Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Order (snake_case: order)
[2m2025-08-15T00:20:41.094436Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.094449Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.094485Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.094501Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.094669Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.094690Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.094711Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.094752Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.095278Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.095298Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.097031Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.097055Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.098707Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.098730Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.100369Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.100391Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.100425Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.100441Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.100461Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.100474Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 20
[2m2025-08-15T00:20:41.100487Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=20, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.100526Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.100540Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.100551Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.100563Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.100671Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.100688Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.100777Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: BilledItem
[2m2025-08-15T00:20:41.100794Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 4 fields for struct BilledItem
[2m2025-08-15T00:20:41.100818Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.100833Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field item
[2m2025-08-15T00:20:41.100845Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field item
[2m2025-08-15T00:20:41.100860Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.100873Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field quantity
[2m2025-08-15T00:20:41.100884Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field quantity
[2m2025-08-15T00:20:41.100898Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.100910Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field taxed
[2m2025-08-15T00:20:41.100920Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field taxed
[2m2025-08-15T00:20:41.100934Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.100946Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field upsale
[2m2025-08-15T00:20:41.100956Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field upsale
[2m2025-08-15T00:20:41.100968Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.100981Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.101015Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: Item
[2m2025-08-15T00:20:41.101064Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Payment
[2m2025-08-15T00:20:41.101081Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 2 fields for struct Payment
[2m2025-08-15T00:20:41.101097Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.101109Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.101120Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.101138Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.101150Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field date
[2m2025-08-15T00:20:41.101161Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field date
[2m2025-08-15T00:20:41.101173Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.101186Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.101243Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Payment (snake_case: payment)
[2m2025-08-15T00:20:41.101262Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.101275Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.101311Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.101327Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.101479Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.101499Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.101518Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.101557Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.102061Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.102081Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.103725Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.103748Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.105396Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.105422Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.107450Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.107496Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.107558Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.107581Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.107618Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.107639Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 4
[2m2025-08-15T00:20:41.107659Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=4, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.107696Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.107716Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.107734Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.107753Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.107936Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.107967Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.108011Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Package
[2m2025-08-15T00:20:41.108032Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 2 fields for struct Package
[2m2025-08-15T00:20:41.108053Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.108070Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.108088Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.108118Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.108136Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field date
[2m2025-08-15T00:20:41.108188Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field date
[2m2025-08-15T00:20:41.108209Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.108224Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.108301Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Package (snake_case: package)
[2m2025-08-15T00:20:41.108320Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.108333Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.108414Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.108453Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.108708Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.108732Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.108755Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.108797Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.109436Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.109464Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.111233Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.111257Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.112909Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.112931Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.114577Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.114599Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.114632Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.114647Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.114671Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.114688Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 2
[2m2025-08-15T00:20:41.114702Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=2, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.114725Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.114739Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.114750Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.114762Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.114859Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.114875Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.114912Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Promotion
[2m2025-08-15T00:20:41.114928Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 2 fields for struct Promotion
[2m2025-08-15T00:20:41.114947Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.114960Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.114971Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.114992Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.115005Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field date
[2m2025-08-15T00:20:41.115016Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field date
[2m2025-08-15T00:20:41.115029Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.115041Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.115112Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Promotion (snake_case: promotion)
[2m2025-08-15T00:20:41.115128Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.115141Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.115178Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.115194Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.115368Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.115388Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.115408Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.115446Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.115959Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.115978Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.117633Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.117655Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.119299Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.119324Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.120962Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.120983Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.121016Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.121031Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.121050Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.121062Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 4
[2m2025-08-15T00:20:41.121075Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=4, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.121094Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.121107Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.121117Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.121128Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.121219Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.121235Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.121268Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: OrderStage
[2m2025-08-15T00:20:41.123282Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Settings
[2m2025-08-15T00:20:41.123306Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 3 fields for struct Settings
[2m2025-08-15T00:20:41.123338Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.123353Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field appointment_notifications
[2m2025-08-15T00:20:41.123365Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field appointment_notifications
[2m2025-08-15T00:20:41.123388Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.123402Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field commissions
[2m2025-08-15T00:20:41.123413Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field commissions
[2m2025-08-15T00:20:41.123435Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.123449Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field home_page
[2m2025-08-15T00:20:41.123460Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field home_page
[2m2025-08-15T00:20:41.123501Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.123518Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.123551Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: AppointmentNotifications
[2m2025-08-15T00:20:41.123566Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 2 fields for struct AppointmentNotifications
[2m2025-08-15T00:20:41.123581Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.123593Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field personal_schedule_change_notifications
[2m2025-08-15T00:20:41.123605Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field personal_schedule_change_notifications
[2m2025-08-15T00:20:41.123638Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.123654Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field all_schedule_change_notifications
[2m2025-08-15T00:20:41.123666Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field all_schedule_change_notifications
[2m2025-08-15T00:20:41.123694Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.123709Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.123735Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Commissions
[2m2025-08-15T00:20:41.123749Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 2 fields for struct Commissions
[2m2025-08-15T00:20:41.123763Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.123775Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field technician
[2m2025-08-15T00:20:41.123786Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field technician
[2m2025-08-15T00:20:41.123818Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.123834Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field sales_rep
[2m2025-08-15T00:20:41.123845Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field sales_rep
[2m2025-08-15T00:20:41.123873Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.123888Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.123914Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: User
[2m2025-08-15T00:20:41.123928Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 10 fields for struct User
[2m2025-08-15T00:20:41.123943Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.123955Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.123965Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.123984Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.123996Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field email
[2m2025-08-15T00:20:41.124010Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field email
[2m2025-08-15T00:20:41.124025Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.124036Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 2 attributes on field first_name
[2m2025-08-15T00:20:41.124047Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field first_name
[2m2025-08-15T00:20:41.124079Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.124095Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 2 attributes on field last_name
[2m2025-08-15T00:20:41.124106Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field last_name
[2m2025-08-15T00:20:41.124139Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.124155Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 2 attributes on field email_token
[2m2025-08-15T00:20:41.124167Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field email_token
[2m2025-08-15T00:20:41.124201Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.124217Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field password
[2m2025-08-15T00:20:41.124228Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field password
[2m2025-08-15T00:20:41.124250Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.124264Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field metadata
[2m2025-08-15T00:20:41.124274Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field metadata
[2m2025-08-15T00:20:41.124292Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.124305Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field settings
[2m2025-08-15T00:20:41.124316Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field settings
[2m2025-08-15T00:20:41.124334Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.124347Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field role
[2m2025-08-15T00:20:41.124358Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field role
[2m2025-08-15T00:20:41.124396Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.124413Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field permissions
[2m2025-08-15T00:20:41.124424Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field permissions
[2m2025-08-15T00:20:41.124498Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.124513Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.124569Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: User (snake_case: user)
[2m2025-08-15T00:20:41.124585Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.124597Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.124634Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.124649Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.124797Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.124817Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.124837Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.124875Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.125384Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.125403Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.127082Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.127106Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.128752Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.128774Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.130415Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.130437Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.130470Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.130485Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.130505Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.130518Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 15
[2m2025-08-15T00:20:41.130531Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=15, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.130557Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.130570Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.130581Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.130593Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.130683Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.130699Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.130760Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Metadata
[2m2025-08-15T00:20:41.130775Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 4 fields for struct Metadata
[2m2025-08-15T00:20:41.130796Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.130812Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field created_at
[2m2025-08-15T00:20:41.130824Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field created_at
[2m2025-08-15T00:20:41.130875Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.130892Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field last_login
[2m2025-08-15T00:20:41.130904Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field last_login
[2m2025-08-15T00:20:41.130936Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.130951Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field is_active
[2m2025-08-15T00:20:41.130963Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field is_active
[2m2025-08-15T00:20:41.130997Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.131012Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field roles
[2m2025-08-15T00:20:41.131024Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field roles
[2m2025-08-15T00:20:41.131054Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.131069Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.131108Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: UserRole
[2m2025-08-15T00:20:41.131142Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: AppPermissions
[2m2025-08-15T00:20:41.131157Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 3 fields for struct AppPermissions
[2m2025-08-15T00:20:41.131183Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.131197Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field applications
[2m2025-08-15T00:20:41.131208Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field applications
[2m2025-08-15T00:20:41.131230Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.131244Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field pages
[2m2025-08-15T00:20:41.131255Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field pages
[2m2025-08-15T00:20:41.131276Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.131290Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field data
[2m2025-08-15T00:20:41.131301Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field data
[2m2025-08-15T00:20:41.131313Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.131325Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.131373Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: Applications
[2m2025-08-15T00:20:41.131403Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: Page
[2m2025-08-15T00:20:41.132403Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Employee
[2m2025-08-15T00:20:41.132426Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 18 fields for struct Employee
[2m2025-08-15T00:20:41.132446Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132459Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.132470Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.132490Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132503Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field image_url
[2m2025-08-15T00:20:41.132514Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field image_url
[2m2025-08-15T00:20:41.132529Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132541Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field name
[2m2025-08-15T00:20:41.132552Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field name
[2m2025-08-15T00:20:41.132574Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132588Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field phones
[2m2025-08-15T00:20:41.132599Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field phones
[2m2025-08-15T00:20:41.132613Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132625Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field role
[2m2025-08-15T00:20:41.132635Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field role
[2m2025-08-15T00:20:41.132650Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132662Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field title
[2m2025-08-15T00:20:41.132674Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field title
[2m2025-08-15T00:20:41.132692Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132705Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field email
[2m2025-08-15T00:20:41.132716Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field email
[2m2025-08-15T00:20:41.132730Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132741Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field address
[2m2025-08-15T00:20:41.132752Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field address
[2m2025-08-15T00:20:41.132766Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132778Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field username
[2m2025-08-15T00:20:41.132788Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field username
[2m2025-08-15T00:20:41.132810Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132824Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field route
[2m2025-08-15T00:20:41.132835Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field route
[2m2025-08-15T00:20:41.132852Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132864Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field rate_per_hour
[2m2025-08-15T00:20:41.132874Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field rate_per_hour
[2m2025-08-15T00:20:41.132888Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132900Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field active
[2m2025-08-15T00:20:41.132910Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field active
[2m2025-08-15T00:20:41.132923Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132934Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field is_technician
[2m2025-08-15T00:20:41.132945Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field is_technician
[2m2025-08-15T00:20:41.132958Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.132970Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field is_sales_rep
[2m2025-08-15T00:20:41.132980Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field is_sales_rep
[2m2025-08-15T00:20:41.132996Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.133008Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field description
[2m2025-08-15T00:20:41.133019Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field description
[2m2025-08-15T00:20:41.133034Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.133047Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field linkedin_url
[2m2025-08-15T00:20:41.133058Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field linkedin_url
[2m2025-08-15T00:20:41.133075Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.133087Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field attendance
[2m2025-08-15T00:20:41.133098Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field attendance
[2m2025-08-15T00:20:41.133116Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.133130Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field settings
[2m2025-08-15T00:20:41.133141Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field settings
[2m2025-08-15T00:20:41.133153Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.133165Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.133241Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Employee (snake_case: employee)
[2m2025-08-15T00:20:41.133258Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.133270Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.133306Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.133323Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.133474Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.133493Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.133513Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.133552Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.134061Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.134080Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.135724Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.135747Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.137394Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.137416Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.139052Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.139073Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.139106Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.139121Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.139141Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.139154Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 32
[2m2025-08-15T00:20:41.139166Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=32, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.139197Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.139211Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.139222Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.139233Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.139327Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.139343Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.139400Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Represents
[2m2025-08-15T00:20:41.139415Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 4 fields for struct Represents
[2m2025-08-15T00:20:41.139443Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.139459Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field r#in
[2m2025-08-15T00:20:41.139474Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field r#in
[2m2025-08-15T00:20:41.139559Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.139576Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field out
[2m2025-08-15T00:20:41.139587Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field out
[2m2025-08-15T00:20:41.139602Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.139614Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.139624Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.139640Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.139652Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field date_started
[2m2025-08-15T00:20:41.139663Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field date_started
[2m2025-08-15T00:20:41.139675Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 4 attributes
[2m2025-08-15T00:20:41.139687Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.139758Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Represents (snake_case: represents)
[2m2025-08-15T00:20:41.139774Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 4 attributes
[2m2025-08-15T00:20:41.139787Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.139823Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.139838Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.139991Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.140011Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.140031Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.140069Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.140568Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.140588Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.142260Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.142284Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.143931Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.143953Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.145590Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.145612Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.145648Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.145662Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.145682Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.145694Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 13
[2m2025-08-15T00:20:41.145707Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=13, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.145729Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 4 attributes
[2m2025-08-15T00:20:41.145755Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found relation attribute
[2m2025-08-15T00:20:41.145894Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed relation attribute: edge_name=represents, from=employee, to=account, direction=To
[2m2025-08-15T00:20:41.145918Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 4 attributes
[2m2025-08-15T00:20:41.145932Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.146020Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.146035Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.151951Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Color
[2m2025-08-15T00:20:41.151982Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 3 fields for struct Color
[2m2025-08-15T00:20:41.152002Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152016Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field red
[2m2025-08-15T00:20:41.152027Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field red
[2m2025-08-15T00:20:41.152044Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152056Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field green
[2m2025-08-15T00:20:41.152066Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field green
[2m2025-08-15T00:20:41.152080Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152092Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field blue
[2m2025-08-15T00:20:41.152102Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field blue
[2m2025-08-15T00:20:41.152115Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.152128Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.152199Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: Sector
[2m2025-08-15T00:20:41.152229Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: PhoneNumber
[2m2025-08-15T00:20:41.152244Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 5 fields for struct PhoneNumber
[2m2025-08-15T00:20:41.152259Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152271Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field main
[2m2025-08-15T00:20:41.152285Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field main
[2m2025-08-15T00:20:41.152300Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152312Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field phone_type
[2m2025-08-15T00:20:41.152323Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field phone_type
[2m2025-08-15T00:20:41.152336Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152348Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 2 attributes on field number
[2m2025-08-15T00:20:41.152360Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field number
[2m2025-08-15T00:20:41.152374Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152385Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field can_text
[2m2025-08-15T00:20:41.152396Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field can_text
[2m2025-08-15T00:20:41.152409Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152421Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field can_call
[2m2025-08-15T00:20:41.152431Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field can_call
[2m2025-08-15T00:20:41.152444Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.152457Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.152487Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Number
[2m2025-08-15T00:20:41.152501Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 3 fields for struct Number
[2m2025-08-15T00:20:41.152516Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152528Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field country_code
[2m2025-08-15T00:20:41.152538Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field country_code
[2m2025-08-15T00:20:41.152553Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152565Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field area_code
[2m2025-08-15T00:20:41.152575Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field area_code
[2m2025-08-15T00:20:41.152589Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152600Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field local_number
[2m2025-08-15T00:20:41.152611Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field local_number
[2m2025-08-15T00:20:41.152623Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.152634Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.152709Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Coordinates
[2m2025-08-15T00:20:41.152725Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 2 fields for struct Coordinates
[2m2025-08-15T00:20:41.152746Z[0m [34mDEBUG[0m [2mevenframe::types::field_type[0m[2m:[0m Found OrderedFloat with inner type
[2m2025-08-15T00:20:41.152762Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152774Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field lat
[2m2025-08-15T00:20:41.152784Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field lat
[2m2025-08-15T00:20:41.152800Z[0m [34mDEBUG[0m [2mevenframe::types::field_type[0m[2m:[0m Found OrderedFloat with inner type
[2m2025-08-15T00:20:41.152815Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152826Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field lng
[2m2025-08-15T00:20:41.152837Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field lng
[2m2025-08-15T00:20:41.152849Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.152860Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.152885Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Site
[2m2025-08-15T00:20:41.152900Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 12 fields for struct Site
[2m2025-08-15T00:20:41.152914Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152926Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.152937Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.152952Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.152964Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field address_line1
[2m2025-08-15T00:20:41.152974Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field address_line1
[2m2025-08-15T00:20:41.152990Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.153003Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field address_line2
[2m2025-08-15T00:20:41.153013Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field address_line2
[2m2025-08-15T00:20:41.153027Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.153039Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field sublocality_level1
[2m2025-08-15T00:20:41.153049Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field sublocality_level1
[2m2025-08-15T00:20:41.153062Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.153074Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field locality
[2m2025-08-15T00:20:41.153084Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field locality
[2m2025-08-15T00:20:41.153099Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.153111Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field administrative_area_level3
[2m2025-08-15T00:20:41.153122Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field administrative_area_level3
[2m2025-08-15T00:20:41.153156Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.153169Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field administrative_area_level2
[2m2025-08-15T00:20:41.153180Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field administrative_area_level2
[2m2025-08-15T00:20:41.153193Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.153205Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field administrative_area_level1
[2m2025-08-15T00:20:41.153215Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field administrative_area_level1
[2m2025-08-15T00:20:41.153229Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.153240Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field country
[2m2025-08-15T00:20:41.153251Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field country
[2m2025-08-15T00:20:41.153266Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.153278Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field postal_code
[2m2025-08-15T00:20:41.153289Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field postal_code
[2m2025-08-15T00:20:41.153303Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.153315Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field postal_code_suffix
[2m2025-08-15T00:20:41.153325Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field postal_code_suffix
[2m2025-08-15T00:20:41.153347Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.153360Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field coordinates
[2m2025-08-15T00:20:41.153371Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field coordinates
[2m2025-08-15T00:20:41.153383Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.153394Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.153454Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Site (snake_case: site)
[2m2025-08-15T00:20:41.153470Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.153483Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.153519Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.153535Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.153703Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.153723Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.153744Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.153785Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.154308Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.154328Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.156020Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.156043Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.157690Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.157711Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.159446Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.159476Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.159512Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.159527Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.159548Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.159562Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 50
[2m2025-08-15T00:20:41.159574Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=50, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.159602Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.159616Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.159628Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.159640Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.159731Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.159747Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.159791Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Address
[2m2025-08-15T00:20:41.159807Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 4 fields for struct Address
[2m2025-08-15T00:20:41.159824Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.159837Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field street
[2m2025-08-15T00:20:41.159848Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field street
[2m2025-08-15T00:20:41.159864Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.159876Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field city
[2m2025-08-15T00:20:41.159886Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field city
[2m2025-08-15T00:20:41.159900Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.159912Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field state
[2m2025-08-15T00:20:41.159924Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field state
[2m2025-08-15T00:20:41.159939Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.159950Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field zipcode
[2m2025-08-15T00:20:41.159961Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field zipcode
[2m2025-08-15T00:20:41.159973Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.159985Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.161487Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Lead
[2m2025-08-15T00:20:41.161510Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 34 fields for struct Lead
[2m2025-08-15T00:20:41.161528Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.161541Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.161552Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.161572Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.161585Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field number
[2m2025-08-15T00:20:41.161596Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field number
[2m2025-08-15T00:20:41.161610Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.161622Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field accepted
[2m2025-08-15T00:20:41.161632Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field accepted
[2m2025-08-15T00:20:41.161647Z[0m [34mDEBUG[0m [2mevenframe::types::field_type[0m[2m:[0m Found OrderedFloat with inner type
[2m2025-08-15T00:20:41.161661Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.161672Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field probability
[2m2025-08-15T00:20:41.161683Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field probability
[2m2025-08-15T00:20:41.161704Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.161717Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field priority
[2m2025-08-15T00:20:41.161728Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field priority
[2m2025-08-15T00:20:41.161746Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.161759Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field due_date
[2m2025-08-15T00:20:41.161769Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field due_date
[2m2025-08-15T00:20:41.161786Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.161798Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field close_date
[2m2025-08-15T00:20:41.161808Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field close_date
[2m2025-08-15T00:20:41.161825Z[0m [34mDEBUG[0m [2mevenframe::types::field_type[0m[2m:[0m Found OrderedFloat with inner type
[2m2025-08-15T00:20:41.161839Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.161851Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field value
[2m2025-08-15T00:20:41.161861Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field value
[2m2025-08-15T00:20:41.161879Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.161892Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field stage
[2m2025-08-15T00:20:41.161902Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field stage
[2m2025-08-15T00:20:41.161917Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.161929Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field status
[2m2025-08-15T00:20:41.161939Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field status
[2m2025-08-15T00:20:41.161955Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.161967Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field description
[2m2025-08-15T00:20:41.161978Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field description
[2m2025-08-15T00:20:41.161995Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162009Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field next_step
[2m2025-08-15T00:20:41.162019Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field next_step
[2m2025-08-15T00:20:41.162032Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162048Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field favorite
[2m2025-08-15T00:20:41.162059Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field favorite
[2m2025-08-15T00:20:41.162076Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162088Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field date_added
[2m2025-08-15T00:20:41.162099Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field date_added
[2m2025-08-15T00:20:41.162120Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162134Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field tax_rate
[2m2025-08-15T00:20:41.162146Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field tax_rate
[2m2025-08-15T00:20:41.162165Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162178Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field sector
[2m2025-08-15T00:20:41.162188Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field sector
[2m2025-08-15T00:20:41.162202Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162213Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field first_name
[2m2025-08-15T00:20:41.162226Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field first_name
[2m2025-08-15T00:20:41.162247Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162260Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field last_name
[2m2025-08-15T00:20:41.162271Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field last_name
[2m2025-08-15T00:20:41.162285Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162296Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field company_name
[2m2025-08-15T00:20:41.162307Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field company_name
[2m2025-08-15T00:20:41.162328Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162342Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field phones
[2m2025-08-15T00:20:41.162353Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field phones
[2m2025-08-15T00:20:41.162371Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162384Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field email
[2m2025-08-15T00:20:41.162394Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field email
[2m2025-08-15T00:20:41.162410Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162422Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field lead_source
[2m2025-08-15T00:20:41.162433Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field lead_source
[2m2025-08-15T00:20:41.162457Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162471Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field site
[2m2025-08-15T00:20:41.162483Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field site
[2m2025-08-15T00:20:41.162497Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162509Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field memo
[2m2025-08-15T00:20:41.162519Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field memo
[2m2025-08-15T00:20:41.162532Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162543Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field needs_review
[2m2025-08-15T00:20:41.162553Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field needs_review
[2m2025-08-15T00:20:41.162567Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162578Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field has_alert
[2m2025-08-15T00:20:41.162588Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field has_alert
[2m2025-08-15T00:20:41.162610Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162624Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field sales_rep
[2m2025-08-15T00:20:41.162646Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found edge attribute on field sales_rep
[2m2025-08-15T00:20:41.162751Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Validating parsed edge attributes for field sales_rep
[2m2025-08-15T00:20:41.162770Z[0m [32m INFO[0m [2mevenframe::schemasync::edge[0m[2m:[0m Successfully parsed edge configuration for field sales_rep: employee -> represents -> account, direction: To
[2m2025-08-15T00:20:41.162794Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162807Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field color
[2m2025-08-15T00:20:41.162819Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field color
[2m2025-08-15T00:20:41.162833Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162844Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field account_type
[2m2025-08-15T00:20:41.162855Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field account_type
[2m2025-08-15T00:20:41.162868Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162880Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field subtype
[2m2025-08-15T00:20:41.162890Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field subtype
[2m2025-08-15T00:20:41.162903Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162915Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field is_tax_exempt
[2m2025-08-15T00:20:41.162925Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field is_tax_exempt
[2m2025-08-15T00:20:41.162938Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162949Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field payment_terms
[2m2025-08-15T00:20:41.162960Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field payment_terms
[2m2025-08-15T00:20:41.162975Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.162988Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field tags
[2m2025-08-15T00:20:41.162998Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field tags
[2m2025-08-15T00:20:41.163020Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.163033Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field custom_fields
[2m2025-08-15T00:20:41.163049Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field custom_fields
[2m2025-08-15T00:20:41.163062Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.163075Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.163150Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Lead (snake_case: lead)
[2m2025-08-15T00:20:41.163167Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.163179Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.163214Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.163231Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.163385Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.163406Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.163426Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.163465Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.163990Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.164010Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.165696Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.165719Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.167384Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.167406Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.169053Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.169075Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.169109Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.169124Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.169144Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.169156Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 4
[2m2025-08-15T00:20:41.169169Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=4, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.169211Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.169225Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.169236Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.169248Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.169337Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.169353Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.169436Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: Priority
[2m2025-08-15T00:20:41.169472Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: LeadStage
[2m2025-08-15T00:20:41.169498Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: NextStep
[2m2025-08-15T00:20:41.170955Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: RecurrenceRule
[2m2025-08-15T00:20:41.170979Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 5 fields for struct RecurrenceRule
[2m2025-08-15T00:20:41.171008Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171023Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field interval
[2m2025-08-15T00:20:41.171035Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field interval
[2m2025-08-15T00:20:41.171054Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171067Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field recurrence_begins
[2m2025-08-15T00:20:41.171079Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field recurrence_begins
[2m2025-08-15T00:20:41.171101Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171115Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field recurrence_ends
[2m2025-08-15T00:20:41.171126Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field recurrence_ends
[2m2025-08-15T00:20:41.171144Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171157Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field cancelled_instances
[2m2025-08-15T00:20:41.171168Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field cancelled_instances
[2m2025-08-15T00:20:41.171190Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171204Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field additional_instances
[2m2025-08-15T00:20:41.171215Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field additional_instances
[2m2025-08-15T00:20:41.171230Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.171243Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.171280Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: Interval
[2m2025-08-15T00:20:41.171361Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: RecurrenceEnd
[2m2025-08-15T00:20:41.171397Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: IntervalUnit
[2m2025-08-15T00:20:41.171423Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: WeekOfMonth
[2m2025-08-15T00:20:41.171448Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: Weekday
[2m2025-08-15T00:20:41.171480Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: Status
[2m2025-08-15T00:20:41.171504Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Colors
[2m2025-08-15T00:20:41.171518Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 3 fields for struct Colors
[2m2025-08-15T00:20:41.171532Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171544Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field main
[2m2025-08-15T00:20:41.171556Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field main
[2m2025-08-15T00:20:41.171570Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171582Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field hover
[2m2025-08-15T00:20:41.171595Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field hover
[2m2025-08-15T00:20:41.171610Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171622Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field active
[2m2025-08-15T00:20:41.171633Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field active
[2m2025-08-15T00:20:41.171645Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.171657Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.171684Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Appointment
[2m2025-08-15T00:20:41.171698Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 14 fields for struct Appointment
[2m2025-08-15T00:20:41.171712Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171724Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.171735Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.171749Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171761Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field title
[2m2025-08-15T00:20:41.171771Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field title
[2m2025-08-15T00:20:41.171790Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171803Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field status
[2m2025-08-15T00:20:41.171814Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field status
[2m2025-08-15T00:20:41.171830Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171842Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field begins
[2m2025-08-15T00:20:41.171853Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field begins
[2m2025-08-15T00:20:41.171867Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171879Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field duration
[2m2025-08-15T00:20:41.171890Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field duration
[2m2025-08-15T00:20:41.171905Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171918Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field timezone
[2m2025-08-15T00:20:41.171928Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field timezone
[2m2025-08-15T00:20:41.171942Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171953Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field offset_ms
[2m2025-08-15T00:20:41.171964Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field offset_ms
[2m2025-08-15T00:20:41.171977Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.171991Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field all_day
[2m2025-08-15T00:20:41.172001Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field all_day
[2m2025-08-15T00:20:41.172015Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.172026Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field multi_day
[2m2025-08-15T00:20:41.172036Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field multi_day
[2m2025-08-15T00:20:41.172060Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.172075Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field employees
[2m2025-08-15T00:20:41.172085Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field employees
[2m2025-08-15T00:20:41.172106Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.172120Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field location
[2m2025-08-15T00:20:41.172130Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field location
[2m2025-08-15T00:20:41.172147Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.172159Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field description
[2m2025-08-15T00:20:41.172169Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field description
[2m2025-08-15T00:20:41.172187Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.172200Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field colors
[2m2025-08-15T00:20:41.172210Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field colors
[2m2025-08-15T00:20:41.172230Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.172244Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field recurrence_rule
[2m2025-08-15T00:20:41.172255Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field recurrence_rule
[2m2025-08-15T00:20:41.172266Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.172278Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.172359Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Appointment (snake_case: appointment)
[2m2025-08-15T00:20:41.172375Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.172388Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.172517Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 2 meta arguments
[2m2025-08-15T00:20:41.172535Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.172684Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.172705Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.172724Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.172766Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.173277Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.173296Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.174964Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.174988Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.176703Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.176736Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.178396Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.178419Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.178454Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.178470Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.178491Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.178504Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 13
[2m2025-08-15T00:20:41.178551Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed coordination rule: InitializeEqual(["begins", "recurrence_rule.recurrence_begins"])
[2m2025-08-15T00:20:41.178579Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=13, overrides=None, coordination_rules_count=1
[2m2025-08-15T00:20:41.178615Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.178629Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.178640Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.178652Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.178746Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.178763Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.179347Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Service
[2m2025-08-15T00:20:41.179371Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 11 fields for struct Service
[2m2025-08-15T00:20:41.179391Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.179406Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.179417Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.179434Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.179447Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field name
[2m2025-08-15T00:20:41.179460Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field name
[2m2025-08-15T00:20:41.179475Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.179487Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field quick_code
[2m2025-08-15T00:20:41.179498Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field quick_code
[2m2025-08-15T00:20:41.179517Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.179530Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field group
[2m2025-08-15T00:20:41.179540Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field group
[2m2025-08-15T00:20:41.179557Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.179570Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field subgroup
[2m2025-08-15T00:20:41.179580Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field subgroup
[2m2025-08-15T00:20:41.179598Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.179612Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field unit
[2m2025-08-15T00:20:41.179623Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field unit
[2m2025-08-15T00:20:41.179637Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.179649Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field active
[2m2025-08-15T00:20:41.179659Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field active
[2m2025-08-15T00:20:41.179673Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.179685Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field commission
[2m2025-08-15T00:20:41.179695Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field commission
[2m2025-08-15T00:20:41.179709Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.179720Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field favorite
[2m2025-08-15T00:20:41.179731Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field favorite
[2m2025-08-15T00:20:41.179748Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.179761Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field average_time
[2m2025-08-15T00:20:41.179771Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field average_time
[2m2025-08-15T00:20:41.179793Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.179808Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field defaults
[2m2025-08-15T00:20:41.179819Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field defaults
[2m2025-08-15T00:20:41.179832Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.179845Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.179916Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Service (snake_case: service)
[2m2025-08-15T00:20:41.179934Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.179947Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.179983Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.180000Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.180151Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.180172Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.180193Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.180233Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.180746Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.180767Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.182416Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.182439Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.184086Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.184109Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.185756Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.185778Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.185812Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.185827Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.185847Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.185860Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 12
[2m2025-08-15T00:20:41.185872Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=12, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.185900Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.185913Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.185925Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.185937Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.186028Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.186044Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.186090Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: ServiceDefaults
[2m2025-08-15T00:20:41.186106Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 2 fields for struct ServiceDefaults
[2m2025-08-15T00:20:41.186125Z[0m [34mDEBUG[0m [2mevenframe::types::field_type[0m[2m:[0m Found OrderedFloat with inner type
[2m2025-08-15T00:20:41.186141Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.186154Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field price
[2m2025-08-15T00:20:41.186165Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field price
[2m2025-08-15T00:20:41.186181Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.186193Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field description
[2m2025-08-15T00:20:41.186204Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field description
[2m2025-08-15T00:20:41.186217Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.186229Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.186759Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Route
[2m2025-08-15T00:20:41.186782Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 11 fields for struct Route
[2m2025-08-15T00:20:41.186800Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.186813Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.186825Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.186854Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.186870Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field techs
[2m2025-08-15T00:20:41.186882Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field techs
[2m2025-08-15T00:20:41.186897Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.186909Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field active
[2m2025-08-15T00:20:41.186920Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field active
[2m2025-08-15T00:20:41.186934Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.186946Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field name
[2m2025-08-15T00:20:41.186957Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field name
[2m2025-08-15T00:20:41.186971Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.186983Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field phone
[2m2025-08-15T00:20:41.186994Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field phone
[2m2025-08-15T00:20:41.187009Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.187022Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field position
[2m2025-08-15T00:20:41.187032Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field position
[2m2025-08-15T00:20:41.187049Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.187061Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field service_route
[2m2025-08-15T00:20:41.187072Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field service_route
[2m2025-08-15T00:20:41.187086Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.187098Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field default_duration_hours
[2m2025-08-15T00:20:41.187109Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field default_duration_hours
[2m2025-08-15T00:20:41.187126Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.187138Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field tags
[2m2025-08-15T00:20:41.187149Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field tags
[2m2025-08-15T00:20:41.187167Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.187180Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field icon
[2m2025-08-15T00:20:41.187191Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field icon
[2m2025-08-15T00:20:41.187207Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.187219Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field color
[2m2025-08-15T00:20:41.187231Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field color
[2m2025-08-15T00:20:41.187244Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.187256Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.187316Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Route (snake_case: route)
[2m2025-08-15T00:20:41.187333Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.187346Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.187381Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.187397Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.187545Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.187566Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.187586Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.187625Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.188130Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.188149Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.189795Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.189821Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.191470Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.191492Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.193157Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.193180Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.193214Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.193229Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.193248Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.193261Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 10
[2m2025-08-15T00:20:41.193274Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=10, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.193300Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.193314Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.193324Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.193336Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.193426Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.193442Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.198717Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Email
[2m2025-08-15T00:20:41.198745Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 3 fields for struct Email
[2m2025-08-15T00:20:41.198765Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.198779Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field local
[2m2025-08-15T00:20:41.198790Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field local
[2m2025-08-15T00:20:41.198807Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.198819Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field domain_name
[2m2025-08-15T00:20:41.198830Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field domain_name
[2m2025-08-15T00:20:41.198844Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.198855Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field top_level_domain
[2m2025-08-15T00:20:41.198866Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field top_level_domain
[2m2025-08-15T00:20:41.198879Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.198892Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.198993Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Password
[2m2025-08-15T00:20:41.199011Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 1 fields for struct Password
[2m2025-08-15T00:20:41.199027Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.199039Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field password
[2m2025-08-15T00:20:41.199050Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field password
[2m2025-08-15T00:20:41.199064Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.199076Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.199135Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: LastName
[2m2025-08-15T00:20:41.199151Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 1 fields for struct LastName
[2m2025-08-15T00:20:41.199167Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.199179Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field name
[2m2025-08-15T00:20:41.199190Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field name
[2m2025-08-15T00:20:41.199203Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.199215Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.199262Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: FirstName
[2m2025-08-15T00:20:41.199278Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 1 fields for struct FirstName
[2m2025-08-15T00:20:41.199293Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.199306Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field name
[2m2025-08-15T00:20:41.199316Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field name
[2m2025-08-15T00:20:41.199330Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.199342Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.199393Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: SignUpCredentials
[2m2025-08-15T00:20:41.199409Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 5 fields for struct SignUpCredentials
[2m2025-08-15T00:20:41.199432Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.199446Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field first_name
[2m2025-08-15T00:20:41.199458Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field first_name
[2m2025-08-15T00:20:41.199478Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.199492Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field last_name
[2m2025-08-15T00:20:41.199503Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field last_name
[2m2025-08-15T00:20:41.199522Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.199537Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field email
[2m2025-08-15T00:20:41.199549Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field email
[2m2025-08-15T00:20:41.199568Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.199582Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field password
[2m2025-08-15T00:20:41.199593Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field password
[2m2025-08-15T00:20:41.199608Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.199620Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field remember_me
[2m2025-08-15T00:20:41.199630Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field remember_me
[2m2025-08-15T00:20:41.199645Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 1 attributes
[2m2025-08-15T00:20:41.199658Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.200854Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Account
[2m2025-08-15T00:20:41.200877Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 21 fields for struct Account
[2m2025-08-15T00:20:41.200895Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.200909Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.200920Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.200947Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.200962Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field tax_rate
[2m2025-08-15T00:20:41.200974Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field tax_rate
[2m2025-08-15T00:20:41.200997Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201011Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field site
[2m2025-08-15T00:20:41.201023Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field site
[2m2025-08-15T00:20:41.201046Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201061Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field sales_rep
[2m2025-08-15T00:20:41.201073Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found edge attribute on field sales_rep
[2m2025-08-15T00:20:41.201132Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Validating parsed edge attributes for field sales_rep
[2m2025-08-15T00:20:41.201150Z[0m [32m INFO[0m [2mevenframe::schemasync::edge[0m[2m:[0m Successfully parsed edge configuration for field sales_rep: employee -> represents -> account, direction: To
[2m2025-08-15T00:20:41.201177Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201192Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 2 attributes on field orders
[2m2025-08-15T00:20:41.201203Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found edge attribute on field orders
[2m2025-08-15T00:20:41.201263Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Validating parsed edge attributes for field orders
[2m2025-08-15T00:20:41.201282Z[0m [32m INFO[0m [2mevenframe::schemasync::edge[0m[2m:[0m Successfully parsed edge configuration for field orders: account -> ordered -> order, direction: From
[2m2025-08-15T00:20:41.201307Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201321Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 1 attributes on field custom_fields
[2m2025-08-15T00:20:41.201333Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field custom_fields
[2m2025-08-15T00:20:41.201366Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201383Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field account_name
[2m2025-08-15T00:20:41.201394Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field account_name
[2m2025-08-15T00:20:41.201413Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201427Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field sector
[2m2025-08-15T00:20:41.201437Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field sector
[2m2025-08-15T00:20:41.201451Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201463Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field memo
[2m2025-08-15T00:20:41.201474Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field memo
[2m2025-08-15T00:20:41.201496Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201511Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field phones
[2m2025-08-15T00:20:41.201522Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field phones
[2m2025-08-15T00:20:41.201541Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201554Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field email
[2m2025-08-15T00:20:41.201565Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field email
[2m2025-08-15T00:20:41.201579Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201591Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field lead_source
[2m2025-08-15T00:20:41.201602Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field lead_source
[2m2025-08-15T00:20:41.201620Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201633Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field colors
[2m2025-08-15T00:20:41.201644Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field colors
[2m2025-08-15T00:20:41.201658Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201670Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field needs_review
[2m2025-08-15T00:20:41.201680Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field needs_review
[2m2025-08-15T00:20:41.201694Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201706Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field has_alert
[2m2025-08-15T00:20:41.201718Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field has_alert
[2m2025-08-15T00:20:41.201733Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201749Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field account_type
[2m2025-08-15T00:20:41.201760Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field account_type
[2m2025-08-15T00:20:41.201774Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201786Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field subtype
[2m2025-08-15T00:20:41.201796Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field subtype
[2m2025-08-15T00:20:41.201811Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201823Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field is_tax_exempt
[2m2025-08-15T00:20:41.201834Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field is_tax_exempt
[2m2025-08-15T00:20:41.201847Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201859Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field payment_terms
[2m2025-08-15T00:20:41.201869Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field payment_terms
[2m2025-08-15T00:20:41.201886Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201899Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field tags
[2m2025-08-15T00:20:41.201909Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field tags
[2m2025-08-15T00:20:41.201925Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.201937Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field date_added
[2m2025-08-15T00:20:41.201948Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field date_added
[2m2025-08-15T00:20:41.201960Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 3 attributes
[2m2025-08-15T00:20:41.201972Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.202051Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Account (snake_case: account)
[2m2025-08-15T00:20:41.202069Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.202082Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.202117Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.202133Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.202288Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.202308Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.202329Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.202372Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.202892Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.202912Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.204606Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.204629Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.206279Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.206302Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.207944Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.207966Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.208000Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.208016Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.208036Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.208049Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 13
[2m2025-08-15T00:20:41.208062Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=13, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.208095Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 3 attributes
[2m2025-08-15T00:20:41.208109Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m No relation attribute found
[2m2025-08-15T00:20:41.208121Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 3 attributes
[2m2025-08-15T00:20:41.208133Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.208223Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.208239Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.208306Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe struct: Ordered
[2m2025-08-15T00:20:41.208322Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Processing 4 fields for struct Ordered
[2m2025-08-15T00:20:41.208340Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.208353Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field id
[2m2025-08-15T00:20:41.208364Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field id
[2m2025-08-15T00:20:41.208380Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.208415Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field r#in
[2m2025-08-15T00:20:41.208445Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field r#in
[2m2025-08-15T00:20:41.208477Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.208496Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field out
[2m2025-08-15T00:20:41.208508Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field out
[2m2025-08-15T00:20:41.208524Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Parsing edge configuration from field
[2m2025-08-15T00:20:41.208536Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m Found 0 attributes on field date
[2m2025-08-15T00:20:41.208546Z[0m [34mDEBUG[0m [2mevenframe::schemasync::edge[0m[2m:[0m No edge attribute found on field date
[2m2025-08-15T00:20:41.208559Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting table validators parsing for 4 attributes
[2m2025-08-15T00:20:41.208572Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 0 table validators
[2m2025-08-15T00:20:41.208633Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Building table struct_config for: Ordered (snake_case: ordered)
[2m2025-08-15T00:20:41.208649Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting mock_data attribute parsing for 4 attributes
[2m2025-08-15T00:20:41.208662Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found mock_data attribute, parsing arguments
[2m2025-08-15T00:20:41.208697Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed 1 meta arguments
[2m2025-08-15T00:20:41.208713Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.208867Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.208887Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.208906Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.208945Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.209449Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.209468Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.211138Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.211161Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.212812Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.212834Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.214471Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.214492Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.214526Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.214541Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.214562Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Processing 'n' parameter
[2m2025-08-15T00:20:41.214575Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed n value: 13
[2m2025-08-15T00:20:41.214588Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed mock_data attribute: n=13, overrides=None, coordination_rules_count=0
[2m2025-08-15T00:20:41.214614Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Starting relation attribute parsing for 4 attributes
[2m2025-08-15T00:20:41.214628Z[0m [34mDEBUG[0m [2mevenframe::derive::attributes[0m[2m:[0m Found relation attribute
[2m2025-08-15T00:20:41.214753Z[0m [32m INFO[0m [2mevenframe::derive::attributes[0m[2m:[0m Successfully parsed relation attribute: edge_name=ordered, from=account, to=order, direction=To
[2m2025-08-15T00:20:41.214773Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Parsing permissions configuration from 4 attributes
[2m2025-08-15T00:20:41.214786Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Found permissions attribute
[2m2025-08-15T00:20:41.214872Z[0m [32m INFO[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Successfully parsed permissions configuration
[2m2025-08-15T00:20:41.214887Z[0m [34mDEBUG[0m [2mevenframe::schemasync::permissions[0m[2m:[0m Permission details - all: false, select: true, update: true, delete: true, create: true
[2m2025-08-15T00:20:41.214926Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Found Evenframe enum: AccountName
[2m2025-08-15T00:20:41.214984Z[0m [32m INFO[0m [2mevenframe::config_builders[0m[2m:[0m First pass complete. Found 43 struct configs, 17 enum configs, 17 table configs
[2m2025-08-15T00:20:41.215040Z[0m [32m INFO[0m [2mevenframe[0m[2m:[0m Config building complete. Found 17 enums, 17 tables, 43 objects
[2m2025-08-15T00:20:41.215060Z[0m [34mDEBUG[0m [2mevenframe[0m[2m:[0m Skipping arktype type generation (disabled in config)
[2m2025-08-15T00:20:41.215077Z[0m [32m INFO[0m [2mevenframe[0m[2m:[0m Generating Effect schemas...
[2m2025-08-15T00:20:41.215089Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Merging 17 tables and 43 objects
[2m2025-08-15T00:20:41.215574Z[0m [34mDEBUG[0m [2mevenframe::config_builders[0m[2m:[0m Merge complete. Total struct configs: 60
[2m2025-08-15T00:20:41.215595Z[0m [34mDEBUG[0m [2mevenframe[0m[2m:[0m Merged 60 structs for Effect generation
[2m2025-08-15T00:20:41.215614Z[0m [32m INFO[0m [2mevenframe::typesync::effect[0m[2m:[0m Generating Effect Schema string [3mstruct_count[0m[2m=[0m60 [3menum_count[0m[2m=[0m17 [3mprint_types[0m[2m=[0mfalse
[2m2025-08-15T00:20:41.215632Z[0m [34mDEBUG[0m [2mevenframe::typesync::effect[0m[2m:[0m Analyzing recursion in types
[2m2025-08-15T00:20:41.220591Z[0m [34mDEBUG[0m [2mevenframe::dependency[0m[2m:[0m Collecting dependencies from enums
[2m2025-08-15T00:20:41.221226Z[0m [34mDEBUG[0m [2mevenframe::dependency[0m[2m:[0m Building dependency graph
[2m2025-08-15T00:20:41.221639Z[0m [34mDEBUG[0m [2mevenframe::dependency[0m[2m:[0m Finding strongly connected components
[2m2025-08-15T00:20:41.222005Z[0m [34mDEBUG[0m [2mevenframe::dependency[0m[2m:[0m SCCs found [3mscc_count[0m[2m=[0m56
[2m2025-08-15T00:20:41.222303Z[0m [34mDEBUG[0m [2mevenframe::typesync::effect[0m[2m:[0m Generating encoded interfaces for structs
[2m2025-08-15T00:20:41.244035Z[0m [34mDEBUG[0m [2mevenframe::typesync::effect[0m[2m:[0m Generating encoded aliases for enums
[2m2025-08-15T00:20:41.245159Z[0m [34mDEBUG[0m [2mevenframe::typesync::effect[0m[2m:[0m Performing topological sort of components
[2m2025-08-15T00:20:41.500238Z[0m [34mDEBUG[0m [2mevenframe::typesync::effect[0m[2m:[0m Generating schema classes
[2m2025-08-15T00:20:41.576547Z[0m [32m INFO[0m [2mevenframe::typesync::effect[0m[2m:[0m Effect Schema generation complete [3moutput_length[0m[2m=[0m41539
[2m2025-08-15T00:20:41.576662Z[0m [34mDEBUG[0m [2mevenframe[0m[2m:[0m Generated Effect content: 41539 characters
[2m2025-08-15T00:20:41.576962Z[0m [32m INFO[0m [2mevenframe[0m[2m:[0m Effect schemas written successfully to bindings.ts
[2m2025-08-15T00:20:41.577247Z[0m [32m INFO[0m [2mevenframe[0m[2m:[0m Starting Schemasync for mock data generation
[2m2025-08-15T00:20:41.577274Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Configuring Schemasync with 17 tables
[2m2025-08-15T00:20:41.577292Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Configuring Schemasync with 43 objects
[2m2025-08-15T00:20:41.577311Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Configuring Schemasync with 17 enums
[2m2025-08-15T00:20:41.577328Z[0m [34mDEBUG[0m [2mevenframe[0m[2m:[0m Initialized Schemasync with 17 tables, 43 objects, 17 enums
[2m2025-08-15T00:20:41.577344Z[0m [32m INFO[0m [2mevenframe[0m[2m:[0m Running Schemasync...
[2m2025-08-15T00:20:41.577368Z[0m [32m INFO[0m [2mevenframe::schemasync[0m[2m:[0m Starting Schemasync pipeline execution
[2m2025-08-15T00:20:41.577387Z[0m [32m INFO[0m [2mevenframe::schemasync[0m[2m:[0m Initializing Schemasync database connection and configuration
[2m2025-08-15T00:20:41.577557Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Loaded environment variables from .env file
[2m2025-08-15T00:20:41.577578Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Loading Evenframe configuration
[2m2025-08-15T00:20:41.577707Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Environment variables loaded from .env
[2m2025-08-15T00:20:41.577727Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Looking for config file at: /Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml
[2m2025-08-15T00:20:41.577748Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Found configuration file at: "/Users/jakoblochinski/Softworks/GitHub/avel/backend/evenframe.toml"
[2m2025-08-15T00:20:41.577787Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Configuration file size: 2053 bytes
[2m2025-08-15T00:20:41.578315Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Successfully parsed TOML configuration
[2m2025-08-15T00:20:41.578336Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Substituting environment variables in configuration
[2m2025-08-15T00:20:41.580078Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_URL not set and no default provided
[2m2025-08-15T00:20:41.580102Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_URL} with value from SURREALDB_URL
[2m2025-08-15T00:20:41.581758Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_NS not set and no default provided
[2m2025-08-15T00:20:41.581781Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_NS} with value from SURREALDB_NS
[2m2025-08-15T00:20:41.583428Z[0m [31mERROR[0m [2mevenframe::config[0m[2m:[0m Environment variable SURREALDB_DB not set and no default provided
[2m2025-08-15T00:20:41.583450Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Replacing ${SURREALDB_DB} with value from SURREALDB_DB
[2m2025-08-15T00:20:41.583484Z[0m [32m INFO[0m [2mevenframe::config[0m[2m:[0m Configuration loaded successfully
[2m2025-08-15T00:20:41.583499Z[0m [34mDEBUG[0m [2mevenframe::config[0m[2m:[0m Schemasync enabled: true, Typesync arktype: false, effect: true
[2m2025-08-15T00:20:41.583520Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Loaded Evenframe configuration successfully
[2m2025-08-15T00:20:41.591193Z[0m [34mDEBUG[0m [2mreqwest::connect[0m[2m:[0m starting new connection: http://localhost:8000/    
[2m2025-08-15T00:20:41.592335Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connecting to 127.0.0.1:8000
[2m2025-08-15T00:20:41.592558Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::connect::http[0m[2m:[0m connected to 127.0.0.1:8000
[2m2025-08-15T00:20:41.593749Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.594341Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.594966Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.595285Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Created SurrealDB connection
[2m2025-08-15T00:20:41.595320Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Retrieved database credentials from environment
[2m2025-08-15T00:20:41.595717Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.632646Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.632861Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Successfully signed in to SurrealDB
[2m2025-08-15T00:20:41.633078Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.657948Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.658035Z[0m [32m INFO[0m [2mevenframe::schemasync[0m[2m:[0m Connected to database namespace 'avel' and database 'northern_lightning_wash'
[2m2025-08-15T00:20:41.658065Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Schemasync initialization completed successfully
[2m2025-08-15T00:20:41.658086Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Validating required fields for Schemasync pipeline
[2m2025-08-15T00:20:41.658107Z[0m [32m INFO[0m [2mevenframe::schemasync[0m[2m:[0m Pipeline validation completed - 17 tables, 43 objects, 17 enums
[2m2025-08-15T00:20:41.658701Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Initialized logging files
[2m2025-08-15T00:20:41.658723Z[0m [32m INFO[0m [2mevenframe::schemasync[0m[2m:[0m Creating Mockmaker instance for data generation and comparison
[2m2025-08-15T00:20:41.659232Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Mockmaker instance created successfully
[2m2025-08-15T00:20:41.659254Z[0m [32m INFO[0m [2mevenframe::schemasync[0m[2m:[0m Generating IDs for mock data
[2m2025-08-15T00:20:41.660425Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.687627Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.688486Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.713913Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.714451Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.739246Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.739799Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.764945Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.765530Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.791684Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.792249Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.819286Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.819894Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.845875Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.846423Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.873992Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.874607Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.900723Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.901306Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.926554Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.927149Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.954952Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.955615Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.982593Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:41.983131Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.009005Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.009638Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.037149Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.037973Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.063617Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.064210Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.095290Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.096047Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.120682Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.120861Z[0m [34mDEBUG[0m [2mevenframe::schemasync::mockmake[0m[2m:[0m ID generation complete [3mtable_count[0m[2m=[0m17
[2m2025-08-15T00:20:42.121152Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m ID generation completed
[2m2025-08-15T00:20:42.121175Z[0m [32m INFO[0m [2mevenframe::schemasync[0m[2m:[0m Running schema comparison pipeline
[2m2025-08-15T00:20:42.121198Z[0m [32m INFO[0m [2mevenframe::schemasync::compare[0m[2m:[0m Starting Comparator pipeline
[2m2025-08-15T00:20:42.121215Z[0m [34mDEBUG[0m [2mevenframe::schemasync::compare[0m[2m:[0m Setting up schemas
[2m2025-08-15T00:20:42.121632Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.174169Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.174452Z[0m [32m INFO[0m [2msurrealdb::core::kvs::ds[0m[2m:[0m Starting kvs store in memory
[2m2025-08-15T00:20:42.174618Z[0m [32m INFO[0m [2msurrealdb::core::kvs::ds[0m[2m:[0m Started kvs store in memory
[2m2025-08-15T00:20:42.668313Z[0m [32m INFO[0m [2msurrealdb::core::kvs::ds[0m[2m:[0m Starting kvs store in memory
[2m2025-08-15T00:20:42.668382Z[0m [32m INFO[0m [2msurrealdb::core::kvs::ds[0m[2m:[0m Started kvs store in memory
[2m2025-08-15T00:20:42.671264Z[0m [34mDEBUG[0m [2mevenframe::schemasync::compare[0m[2m:[0m Setting up access definitions
[2m2025-08-15T00:20:42.671311Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::access[0m[2m:[0m Setting up access definitions
[2m2025-08-15T00:20:42.671330Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::access[0m[2m:[0m Processing access configurations [3maccess_count[0m[2m=[0m1
[2m2025-08-15T00:20:42.671613Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::access[0m[2m:[0m Generating access definition [3maccess_name[0m[2m=[0muser [3maccess_type[0m[2m=[0mRecord
[2m2025-08-15T00:20:42.673282Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::access[0m[2m:[0m Access created successfully [3maccess_name[0m[2m=[0muser
[2m2025-08-15T00:20:42.673316Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::access[0m[2m:[0m Access definitions setup complete [3mtotal_query_length[0m[2m=[0m294
[2m2025-08-15T00:20:42.673525Z[0m [34mDEBUG[0m [2mevenframe::schemasync::compare[0m[2m:[0m Exporting schemas for comparison
[2m2025-08-15T00:20:42.697600Z[0m [34mDEBUG[0m [2mevenframe::schemasync::compare[0m[2m:[0m Comparing schemas
[2m2025-08-15T00:20:42.697636Z[0m [34mDEBUG[0m [2mevenframe::schemasync::compare[0m[2m:[0m Parsing and comparing schema exports
[2m2025-08-15T00:20:42.702410Z[0m [34mDEBUG[0m [2mevenframe::schemasync::compare[0m[2m:[0m Starting detailed schema comparison
[2m2025-08-15T00:20:42.702491Z[0m [34mDEBUG[0m [2mevenframe::schemasync::compare[0m[2m:[0m Schema comparison complete [3mnew_tables[0m[2m=[0m0 [3mremoved_tables[0m[2m=[0m17 [3mmodified_tables[0m[2m=[0m0 [3mnew_accesses[0m[2m=[0m0 [3mremoved_accesses[0m[2m=[0m0 [3mmodified_accesses[0m[2m=[0m1
[2m2025-08-15T00:20:42.702884Z[0m [32m INFO[0m [2mevenframe::schemasync::compare[0m[2m:[0m Schema changes detected [3mnew_tables[0m[2m=[0m0 [3mremoved_tables[0m[2m=[0m17 [3mmodified_tables[0m[2m=[0m0
[2m2025-08-15T00:20:42.702908Z[0m [32m INFO[0m [2mevenframe::schemasync::compare[0m[2m:[0m Comparator pipeline completed successfully
[2m2025-08-15T00:20:42.702925Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Schema comparison completed
[2m2025-08-15T00:20:42.702940Z[0m [32m INFO[0m [2mevenframe::schemasync[0m[2m:[0m Removing old data from database
[2m2025-08-15T00:20:42.702964Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::remove[0m[2m:[0m Generating remove statements based on schema changes
[2m2025-08-15T00:20:42.702979Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::remove[0m[2m:[0m Schema changes: SchemaChanges { new_tables: [], removed_tables: ["payment", "route", "service", "ordered", "lead", "user", "represents", "promotion", "company", "employee", "tax_rate", "appointment", "package", "product", "order", "account", "site"], modified_tables: [], new_accesses: [], removed_accesses: [], modified_accesses: [AccessChange { access_name: "user", changes: [JwtKeyChanged, IssuerKeyChanged] }] }
[2m2025-08-15T00:20:42.703441Z[0m [34mDEBUG[0m [2mevenframe::schemasync::mockmake[0m[2m:[0m Generated remove statements [3mstatement_length[0m[2m=[0m562
[2m2025-08-15T00:20:42.704129Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.742024Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.742219Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Old data removal completed
[2m2025-08-15T00:20:42.742247Z[0m [32m INFO[0m [2mevenframe::schemasync[0m[2m:[0m Defining database tables and schema
[2m2025-08-15T00:20:42.742268Z[0m [34mDEBUG[0m [2mevenframe::schemasync[0m[2m:[0m Defining tables with full_refresh_mode: true
[2m2025-08-15T00:20:42.742606Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Generating define statements for table [3mtable_name[0m[2m=[0mtax_rate [3mfull_refresh_mode[0m[2m=[0mtrue
[2m2025-08-15T00:20:42.742630Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Context sizes [3mquery_details_count[0m[2m=[0m17 [3mserver_only_count[0m[2m=[0m43 [3menum_count[0m[2m=[0m17
[2m2025-08-15T00:20:42.742654Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Table is normal type [3mtable_name[0m[2m=[0mtax_rate
[2m2025-08-15T00:20:42.742676Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Starting statement generation [3mtable_name[0m[2m=[0mtax_rate
[2m2025-08-15T00:20:42.742697Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Processing table fields [3mtable_name[0m[2m=[0mtax_rate [3mfield_count[0m[2m=[0m10
[2m2025-08-15T00:20:42.743152Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.743177Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.743191Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.743871Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.743889Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.743899Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.744554Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.744571Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.744582Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.745234Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.745251Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.745262Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.745908Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.745925Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.745935Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.746579Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.746595Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.746608Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.747256Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.747272Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.747283Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.747926Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.747942Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.747953Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.748606Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Converting OrderedFloat to float for field tax_components
[2m2025-08-15T00:20:42.748634Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.748647Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.748657Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.748949Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Completed define statements generation [3mtable_name[0m[2m=[0mtax_rate [3moutput_length[0m[2m=[0m1587
[2m2025-08-15T00:20:42.758691Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Executing and validating statements [3moperation_type[0m[2m=[0mdefine [3mtable_name[0m[2m=[0mall [3mstatement_length[0m[2m=[0m1587
[2m2025-08-15T00:20:42.758744Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Sending query to database
[2m2025-08-15T00:20:42.759926Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.791208Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.791334Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Validating SurrealQL response [3mexpected_operation[0m[2m=[0mdefine [3mstatement_length[0m[2m=[0m1587
[2m2025-08-15T00:20:42.791367Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Initialized validation state
[2m2025-08-15T00:20:42.791963Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Generating define statements for table [3mtable_name[0m[2m=[0mcompany [3mfull_refresh_mode[0m[2m=[0mtrue
[2m2025-08-15T00:20:42.791996Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Context sizes [3mquery_details_count[0m[2m=[0m17 [3mserver_only_count[0m[2m=[0m43 [3menum_count[0m[2m=[0m17
[2m2025-08-15T00:20:42.792014Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Table is normal type [3mtable_name[0m[2m=[0mcompany
[2m2025-08-15T00:20:42.792029Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Starting statement generation [3mtable_name[0m[2m=[0mcompany
[2m2025-08-15T00:20:42.792098Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Processing table fields [3mtable_name[0m[2m=[0mcompany [3mfield_count[0m[2m=[0m27
[2m2025-08-15T00:20:42.792954Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.792995Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.793021Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.793925Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct PhoneNumber for field phones
[2m2025-08-15T00:20:42.793983Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: Bool -> bool
[2m2025-08-15T00:20:42.794010Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field phone_type: String -> string
[2m2025-08-15T00:20:42.794029Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field number: String -> string
[2m2025-08-15T00:20:42.794048Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field can_text: Bool -> bool
[2m2025-08-15T00:20:42.794064Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field can_call: Bool -> bool
[2m2025-08-15T00:20:42.794094Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.794109Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.794120Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.794956Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.794984Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.794997Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.795732Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.795752Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.795763Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.796425Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.796443Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.796455Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.797108Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.797125Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.797136Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.797786Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.797803Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.797814Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.798465Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.798486Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.798498Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.799155Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.799172Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.799183Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.799885Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.799904Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.799916Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.800567Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.800584Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.800595Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.801245Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.801262Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.801273Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.801929Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.801947Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.801958Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.802607Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.802624Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.802635Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.803283Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.803300Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.803310Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.803969Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.803987Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.803998Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.804657Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.804674Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.804687Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.805338Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.805355Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.805366Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.806014Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.806031Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.806042Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.806689Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.806706Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.806718Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.807366Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.807383Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.807393Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.808041Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.808058Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.808069Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.808783Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.808813Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.808826Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.809506Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.809525Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.809537Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.810194Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.810212Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.810222Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.810870Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.810887Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.810918Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.811207Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Completed define statements generation [3mtable_name[0m[2m=[0mcompany [3moutput_length[0m[2m=[0m4122
[2m2025-08-15T00:20:42.840958Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Executing and validating statements [3moperation_type[0m[2m=[0mdefine [3mtable_name[0m[2m=[0mall [3mstatement_length[0m[2m=[0m4122
[2m2025-08-15T00:20:42.841012Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Sending query to database
[2m2025-08-15T00:20:42.843375Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.887091Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.887298Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Validating SurrealQL response [3mexpected_operation[0m[2m=[0mdefine [3mstatement_length[0m[2m=[0m4122
[2m2025-08-15T00:20:42.887325Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Initialized validation state
[2m2025-08-15T00:20:42.888012Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Generating define statements for table [3mtable_name[0m[2m=[0mpayment [3mfull_refresh_mode[0m[2m=[0mtrue
[2m2025-08-15T00:20:42.888036Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Context sizes [3mquery_details_count[0m[2m=[0m17 [3mserver_only_count[0m[2m=[0m43 [3menum_count[0m[2m=[0m17
[2m2025-08-15T00:20:42.888052Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Table is normal type [3mtable_name[0m[2m=[0mpayment
[2m2025-08-15T00:20:42.888066Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Starting statement generation [3mtable_name[0m[2m=[0mpayment
[2m2025-08-15T00:20:42.888084Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Processing table fields [3mtable_name[0m[2m=[0mpayment [3mfield_count[0m[2m=[0m2
[2m2025-08-15T00:20:42.888540Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.888566Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.888617Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.888966Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Completed define statements generation [3mtable_name[0m[2m=[0mpayment [3moutput_length[0m[2m=[0m481
[2m2025-08-15T00:20:42.891983Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Executing and validating statements [3moperation_type[0m[2m=[0mdefine [3mtable_name[0m[2m=[0mall [3mstatement_length[0m[2m=[0m481
[2m2025-08-15T00:20:42.892034Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Sending query to database
[2m2025-08-15T00:20:42.892697Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m reuse idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.922060Z[0m [34mDEBUG[0m [2mhyper_util::client::legacy::pool[0m[2m:[0m pooling idle connection for ("http", localhost:8000)
[2m2025-08-15T00:20:42.922165Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Validating SurrealQL response [3mexpected_operation[0m[2m=[0mdefine [3mstatement_length[0m[2m=[0m481
[2m2025-08-15T00:20:42.922199Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::execute[0m[2m:[0m Initialized validation state
[2m2025-08-15T00:20:42.922578Z[0m [32m INFO[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Generating define statements for table [3mtable_name[0m[2m=[0mappointment [3mfull_refresh_mode[0m[2m=[0mtrue
[2m2025-08-15T00:20:42.922602Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Context sizes [3mquery_details_count[0m[2m=[0m17 [3mserver_only_count[0m[2m=[0m43 [3menum_count[0m[2m=[0m17
[2m2025-08-15T00:20:42.922618Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Table is normal type [3mtable_name[0m[2m=[0mappointment
[2m2025-08-15T00:20:42.922633Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Starting statement generation [3mtable_name[0m[2m=[0mappointment
[2m2025-08-15T00:20:42.922650Z[0m [34mDEBUG[0m [2mevenframe::schemasync::surql::define[0m[2m:[0m Processing table fields [3mtable_name[0m[2m=[0mappointment [3mfield_count[0m[2m=[0m14
[2m2025-08-15T00:20:42.923154Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.923173Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.923184Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.923897Z[0m [34mDEBUG[0m [2mevenframe::default[0m[2m:[0m Processing Other type 'Status' for SURQL default
[2m2025-08-15T00:20:42.923928Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.923942Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.923953Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.924628Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.924646Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.924658Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.925508Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.925555Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.925574Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.926281Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.926320Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.926336Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.927077Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.927109Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.927124Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.927854Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.927877Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.927891Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.928580Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.928602Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.928614Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.929364Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.929384Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.929396Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.930088Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.930108Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.930119Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.930786Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.930804Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.930815Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.931483Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.931512Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.931528Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.931540Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.931560Z[0m [34mDEBUG[0m [2mevenframe::default[0m[2m:[0m Processing Other type 'Colors' for SURQL default
[2m2025-08-15T00:20:42.932714Z[0m [34mDEBUG[0m [2mevenframe::default[0m[2m:[0m Found app struct 'Colors' with 3 fields
[2m2025-08-15T00:20:42.932809Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m Generating ASSERT clauses from 0 validators for variable: $value
[2m2025-08-15T00:20:42.932826Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m No valid assertions generated from 0 validators
[2m2025-08-15T00:20:42.932837Z[0m [34mDEBUG[0m [2mevenframe::schemasync::table[0m[2m:[0m ASSERT clause generation completed, result length: 0
[2m2025-08-15T00:20:42.933554Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.933593Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.933613Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.933635Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.933652Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.933676Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.933701Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.933718Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.933732Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.933745Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.933764Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.933780Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.933799Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.933813Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.933831Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.933847Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.933862Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.933878Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.933892Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.933909Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.933923Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.933936Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.933948Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.933960Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.933972Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.933984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.934035Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.934074Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.934091Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.934106Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.934121Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.934134Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.934146Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.934162Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.934179Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.934197Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.934213Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.934231Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.934247Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.934269Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.934288Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.934304Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.934317Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.934329Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.934346Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.934362Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.934380Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.934394Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.934412Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.934428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.934442Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.934457Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.934471Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.934488Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.934502Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.934514Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.934526Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.934538Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.934550Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.934562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.934609Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.934649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.934666Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.934681Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.934696Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.934710Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.934722Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.934738Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.934752Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.934771Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.934787Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.934805Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.934820Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.934842Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.934861Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.934877Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.934890Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.934902Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.934919Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.934934Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.934952Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.934966Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.934984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.934999Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.935014Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.935029Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.935043Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.935060Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.935076Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.935088Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.935101Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.935113Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.935125Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.935140Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.935188Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.935225Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.935242Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.935257Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.935272Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.935285Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.935297Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.935313Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.935327Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.935345Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.935361Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.935379Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.935394Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.935416Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.935436Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.935451Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.935464Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.935476Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.935494Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.935509Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.935527Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.935543Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.935560Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.935576Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.935590Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.935606Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.935620Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.935637Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.935651Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.935663Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.935676Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.935688Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.935699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.935711Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.935766Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.935804Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.935821Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.935835Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.935851Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.935868Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.935880Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.935896Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.935910Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.935939Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.935957Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.935979Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.935995Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.936022Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.936043Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.936059Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.936074Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.936086Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.936104Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.936119Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.936137Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.936151Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.936168Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.936184Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.936199Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.936214Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.936228Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.936245Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.936259Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.936271Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.936283Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.936295Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.936307Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.936319Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.936370Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.936408Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.936425Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.936440Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.936455Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.936472Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.936484Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.936500Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.936515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.936557Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.936575Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.936598Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.936613Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.936640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.936660Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.936676Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.936689Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.936701Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.936718Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.936734Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.936752Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.936767Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.936784Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.936800Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.936814Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.936830Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.936843Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.936861Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.936874Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.936887Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.936899Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.936910Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.936922Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.936934Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.936984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.937021Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.937039Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.937054Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.937070Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.937087Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.937099Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.937114Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.937129Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.937158Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.937176Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.937198Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.937214Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.937241Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.937261Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.937277Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.937290Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.937302Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.937319Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.937335Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.937353Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.937367Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.937384Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.937399Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.937413Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.937429Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.937443Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.937460Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.937473Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.937487Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.937500Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.937511Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.937523Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.937535Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.937585Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.937622Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.937638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.937653Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.937669Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.937686Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.937698Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.937713Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.937728Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.937758Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.937776Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.937797Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.937813Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.937840Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.937860Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.937876Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.937889Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.937900Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.937918Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.937933Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.937951Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.937965Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.937983Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.938000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.938015Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.938031Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.938044Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.938061Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.938075Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.938087Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.938099Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.938111Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.938123Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.938135Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.938215Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.938273Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.938295Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.938316Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.938340Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.938354Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.938366Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.938381Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.938396Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.938426Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.938444Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.938466Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.938482Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.938509Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.938529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.938545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.938559Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.938571Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.938591Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.938607Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.938626Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.938640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.938657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.938673Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.938688Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.938703Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.938717Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.938734Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.938748Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.938760Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.938772Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.938784Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.938796Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.938807Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.938860Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.938897Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.938914Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.938929Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.938944Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.938958Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.938969Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.938985Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.939000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.939030Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.939048Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.939071Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.939087Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.939115Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.939135Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.939151Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.939164Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.939176Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.939193Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.939209Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.939227Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.939241Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.939259Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.939274Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.939289Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.939358Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.939378Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.939400Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.939417Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.939430Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.939443Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.939455Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.939467Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.939479Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.939544Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.939585Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.939603Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.939619Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.939638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.939652Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.939664Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.939681Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.939697Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.939730Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.939750Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.939770Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.939787Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.939815Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.939837Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.939854Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.939868Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.939880Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.939898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.939914Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.939932Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.939946Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.939964Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.939980Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.939995Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.940011Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.940024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.940042Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.940056Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.940068Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.940081Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.940113Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.940127Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.940139Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.940195Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.940234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.940251Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.940266Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.940282Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.940295Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.940307Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.940323Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.940341Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.940371Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.940390Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.940410Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.940426Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.940453Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.940474Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.940490Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.940504Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.940516Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.940534Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.940550Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.940569Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.940583Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.940600Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.940616Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.940633Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.940649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.940663Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.940681Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.940695Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.940708Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.940720Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.940732Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.940744Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.940756Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.940810Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.940849Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.940866Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.940881Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.940896Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.940914Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.940926Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.940942Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.940957Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.940986Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.941006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.941025Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.941041Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.941068Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.941089Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.941105Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.941119Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.941130Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.941148Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.941163Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.941184Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.941198Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.941216Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.941232Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.941246Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.941262Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.941276Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.941293Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.941307Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.941319Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.941331Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.941343Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.941355Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.941367Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.941421Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.941459Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.941476Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.941491Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.941507Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.941524Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.941536Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.941551Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.941566Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.941594Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.941614Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.941635Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.941651Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.941678Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.941699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.941715Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.941728Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.941740Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.941804Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.941827Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.941850Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.941865Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.941884Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.941900Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.941915Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.941931Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.941945Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.941962Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.941976Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.941988Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.942000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.942012Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.942024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.942036Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.942095Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.942134Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.942151Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.942166Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.942182Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.942199Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.942213Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.942229Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.942244Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.942273Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.942291Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.942313Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.942329Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.942356Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.942376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.942393Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.942406Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.942418Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.942435Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.942450Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.942468Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.942482Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.942500Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.942515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.942529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.942545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.942558Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.942575Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.942589Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.942601Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.942613Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.942625Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.942636Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.942648Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.942700Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.942738Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.942755Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.942770Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.942785Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.942802Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.942814Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.942836Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.942855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.942886Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.942905Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.942927Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.942943Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.942970Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.942989Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.943006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.943019Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.943031Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.943048Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.943063Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.943081Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.943095Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.943112Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.943128Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.943142Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.943157Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.943173Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.943191Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.943205Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.943217Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.943229Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.943241Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.943253Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.943264Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.943319Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.943358Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.943374Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.943390Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.943405Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.943423Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.943435Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.943451Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.943466Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.943496Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.943515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.943536Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.943552Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.943579Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.943599Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.943615Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.943628Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.943640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.943657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.943679Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.943699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.943715Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.943738Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.943754Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.943768Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.943784Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.943797Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.943817Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.943832Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.943844Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.943855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.943868Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.943880Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.943892Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.943943Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.943984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.944002Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.944017Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.944033Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.944050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.944062Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.944077Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.944092Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.944127Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.944146Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.944168Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.944183Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.944213Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.944236Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.944253Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.944266Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.944278Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.944295Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.944311Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.944329Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.944343Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.944360Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.944375Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.944389Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.944404Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.944422Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.944441Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.944455Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.944467Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.944479Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.944491Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.944503Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.944515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.944567Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.944604Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.944620Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.944642Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.944657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.944675Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.944687Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.944703Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.944720Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.944755Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.944773Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.944794Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.944810Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.944837Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.944857Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.944873Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.944886Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.944898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.944915Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.944931Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.944949Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.944963Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.944980Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.944995Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.945009Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.945025Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.945038Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.945055Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.945069Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.945081Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.945093Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.945104Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.945116Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.945128Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.945180Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.945219Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.945236Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.945251Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.945266Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.945279Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.945291Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.945306Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.945321Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.945374Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.945394Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.945422Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.945438Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.945466Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.945486Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.945503Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.945516Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.945528Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.945545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.945560Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.945578Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.945592Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.945609Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.945624Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.945638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.945654Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.945667Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.945684Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.945700Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.945713Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.945725Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.945737Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.945748Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.945760Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.945813Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.945851Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.945868Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.945883Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.945898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.945911Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.945923Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.945938Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.945953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.945983Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.946004Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.946024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.946042Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.946069Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.946089Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.946105Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.946118Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.946130Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.946147Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.946163Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.946181Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.946195Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.946214Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.946230Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.946245Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.946261Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.946274Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.946291Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.946305Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.946317Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.946329Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.946341Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.946352Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.946364Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.946416Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.946454Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.946471Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.946487Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.946504Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.946517Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.946529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.946544Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.946561Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.946614Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.946635Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.946656Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.946671Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.946699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.946718Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.946735Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.946751Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.946763Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.946781Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.946796Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.946814Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.946828Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.946845Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.946860Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.946875Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.946891Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.946905Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.946923Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.946936Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.946949Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.946961Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.946972Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.946984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.946996Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.947049Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.947088Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.947105Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.947120Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.947135Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.947152Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.947164Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.947179Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.947193Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.947222Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.947243Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.947262Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.947277Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.947304Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.947323Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.947339Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.947352Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.947364Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.947381Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.947397Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.947415Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.947428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.947445Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.947461Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.947475Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.947490Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.947504Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.947521Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.947534Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.947546Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.947560Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.947572Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.947584Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.947596Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.947649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.947689Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.947707Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.947723Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.947739Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.947756Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.947768Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.947784Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.947798Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.947827Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.947846Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.947865Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.947880Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.947907Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.947927Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.947943Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.947956Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.947968Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.947985Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.948000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.948018Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.948032Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.948049Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.948064Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.948078Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.948093Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.948106Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.948123Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.948137Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.948148Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.948181Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.948194Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.948206Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.948217Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.948271Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.948310Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.948326Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.948341Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.948357Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.948373Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.948386Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.948401Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.948415Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.948444Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.948463Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.948484Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.948500Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.948526Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.948546Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.948562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.948575Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.948587Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.948604Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.948619Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.948637Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.948651Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.948668Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.948685Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.948700Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.948716Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.948730Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.948748Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.948762Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.948774Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.948786Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.948798Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.948810Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.948822Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.948872Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.948908Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.948925Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.948940Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.948955Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.948972Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.948984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.948999Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.949013Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.949043Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.949062Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.949083Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.949099Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.949126Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.949145Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.949161Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.949174Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.949186Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.949205Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.949221Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.949239Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.949252Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.949269Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.949284Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.949298Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.949317Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.949331Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.949348Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.949362Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.949374Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.949386Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.949398Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.949409Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.949421Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.949471Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.949508Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.949524Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.949539Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.949554Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.949571Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.949583Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.949598Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.949613Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.949642Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.949660Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.949681Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.949698Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.949725Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.949745Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.949761Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.949774Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.949786Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.949804Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.949819Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.949837Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.949850Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.949868Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.949883Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.949897Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.949912Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.949925Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.949942Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.949956Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.949969Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.949981Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.949993Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.950005Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.950016Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.950066Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.950103Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.950119Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.950134Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.950149Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.950167Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.950179Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.950195Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.950209Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.950239Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.950257Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.950279Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.950295Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.950321Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.950341Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.950357Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.950370Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.950382Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.950398Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.950414Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.950432Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.950446Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.950462Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.950477Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.950491Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.950507Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.950520Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.950537Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.950550Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.950562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.950574Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.950586Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.950599Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.950611Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.950661Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.950698Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.950714Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.950728Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.950744Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.950761Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.950773Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.950788Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.950803Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.950832Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.950851Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.950872Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.950888Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.950914Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.950934Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.950950Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.950963Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.950975Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.950992Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.951008Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.951025Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.951039Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.951056Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.951072Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.951086Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.951103Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.951116Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.951134Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.951147Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.951160Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.951172Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.951183Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.951195Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.951207Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.951256Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.951293Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.951310Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.951324Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.951343Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.951356Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.951368Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.951383Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.951398Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.951427Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.951446Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.951468Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.951483Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.951509Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.951529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.951545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.951558Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.951570Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.951587Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.951602Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.951634Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.951648Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.951665Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.951680Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.951694Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.951710Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.951723Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.951740Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.951753Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.951765Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.951777Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.951789Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.951801Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.951812Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.951866Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.951904Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.951920Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.951935Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.951950Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.951964Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.951976Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.951991Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.952006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.952037Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.952059Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.952078Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.952093Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.952120Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.952141Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.952159Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.952172Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.952184Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.952201Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.952216Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.952234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.952248Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.952265Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.952280Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.952294Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.952310Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.952323Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.952340Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.952354Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.952366Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.952378Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.952389Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.952401Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.952413Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.952465Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.952502Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.952519Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.952533Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.952549Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.952561Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.952573Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.952590Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.952605Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.952637Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.952656Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.952675Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.952691Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.952718Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.952738Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.952754Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.952767Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.952778Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.952796Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.952811Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.952829Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.952843Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.952860Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.952875Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.952890Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.952905Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.952919Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.952935Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.952949Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.952961Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.952973Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.952985Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.952997Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.953009Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.953063Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.953100Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.953117Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.953131Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.953147Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.953160Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.953171Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.953187Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.953204Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.953234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.953253Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.953272Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.953287Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.953314Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.953334Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.953351Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.953364Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.953376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.953393Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.953409Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.953427Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.953441Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.953458Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.953473Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.953487Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.953503Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.953517Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.953535Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.953550Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.953562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.953574Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.953586Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.953598Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.953610Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.953663Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.953700Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.953717Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.953732Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.953747Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.953764Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.953777Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.953792Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.953807Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.953836Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.953857Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.953877Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.953893Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.953919Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.953939Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.953955Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.953968Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.953980Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.953997Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.954013Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.954031Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.954046Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.954064Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.954079Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.954094Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.954111Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.954125Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.954143Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.954157Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.954170Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.954182Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.954194Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.954206Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.954217Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.954270Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.954308Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.954325Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.954340Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.954356Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.954373Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.954385Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.954400Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.954415Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.954443Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.954462Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.954484Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.954499Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.954526Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.954546Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.954564Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.954578Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.954589Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.954607Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.954622Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.954641Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.954655Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.954672Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.954688Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.954702Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.954721Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.954735Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.954752Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.954767Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.954780Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.954792Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.954804Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.954816Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.954828Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.954878Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.954916Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.954933Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.954948Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.954964Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.954981Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.954994Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.955011Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.955026Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.955059Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.955079Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.955101Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.955117Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.955144Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.955164Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.955180Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.955194Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.955205Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.955223Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.955238Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.955257Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.955271Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.955288Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.955304Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.955318Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.955334Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.955347Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.955365Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.955379Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.955391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.955403Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.955425Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.955440Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.955453Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.955507Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.955545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.955563Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.955579Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.955595Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.955612Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.955624Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.955640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.955654Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.955691Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.955711Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.955734Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.955750Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.955777Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.955797Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.955814Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.955827Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.955839Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.955858Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.955874Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.955892Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.955906Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.955923Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.955938Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.955953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.955969Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.955983Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.956000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.956014Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.956046Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.956060Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.956072Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.956083Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.956095Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.956147Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.956184Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.956201Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.956216Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.956232Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.956249Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.956261Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.956276Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.956291Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.956322Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.956340Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.956362Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.956378Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.956404Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.956424Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.956440Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.956453Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.956465Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.956482Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.956497Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.956515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.956529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.956546Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.956563Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.956577Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.956593Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.956606Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.956623Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.956637Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.956649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.956661Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.956673Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.956684Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.956696Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.956746Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.956783Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.956800Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.956814Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.956830Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.956847Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.956864Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.956881Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.956896Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.956927Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.956945Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.956967Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.956983Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.957009Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.957028Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.957045Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.957058Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.957072Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.957089Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.957105Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.957123Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.957137Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.957154Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.957169Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.957183Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.957199Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.957213Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.957229Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.957243Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.957255Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.957267Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.957279Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.957291Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.957303Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.957353Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.957391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.957408Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.957422Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.957441Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.957455Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.957467Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.957488Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.957505Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.957536Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.957554Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.957577Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.957593Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.957620Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.957640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.957656Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.957670Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.957681Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.957699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.957714Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.957733Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.957746Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.957764Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.957779Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.957793Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.957809Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.957822Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.957840Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.957853Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.957865Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.957877Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.957889Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.957901Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.957913Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.957968Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.958007Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.958024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.958039Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.958056Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.958069Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.958081Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.958102Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.958119Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.958163Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.958184Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.958203Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.958219Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.958246Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.958266Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.958282Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.958296Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.958307Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.958325Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.958340Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.958359Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.958373Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.958390Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.958406Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.958467Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.958518Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.958546Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.958570Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.958587Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.958600Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.958613Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.958627Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.958640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.958652Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.958713Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.958752Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.958770Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.958786Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.958802Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.958815Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.958828Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.958844Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.958859Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.958893Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.958913Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.958933Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.958950Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.958978Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.958999Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.959016Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.959029Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.959041Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.959059Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.959075Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.959093Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.959107Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.959125Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.959141Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.959158Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.959175Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.959188Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.959206Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.959220Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.959232Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.959244Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.959257Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.959269Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.959281Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.959337Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.959376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.959393Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.959408Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.959424Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.959437Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.959449Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.959465Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.959483Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.959512Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.959576Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.959611Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.959632Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.959707Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.959746Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.959768Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.959783Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.959796Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.959815Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.959834Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.959855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.959870Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.959888Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.959904Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.959920Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.959936Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.959950Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.959968Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.959982Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.959995Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.960007Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.960019Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.960032Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.960044Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.960101Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.960141Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.960158Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.960174Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.960190Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.960207Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.960220Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.960236Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.960251Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.960280Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.960299Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.960319Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.960335Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.960364Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.960386Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.960402Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.960416Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.960428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.960446Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.960462Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.960481Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.960496Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.960514Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.960530Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.960545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.960561Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.960575Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.960592Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.960607Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.960619Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.960632Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.960644Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.960657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.960669Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.960722Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.960760Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.960781Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.960797Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.960813Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.960831Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.960845Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.960862Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.960877Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.960906Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.960926Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.960949Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.960993Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.961039Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.961065Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.961083Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.961097Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.961109Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.961128Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.961145Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.961164Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.961178Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.961196Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.961212Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.961227Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.961243Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.961256Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.961274Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.961288Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.961300Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.961312Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.961325Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.961337Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.961351Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.961408Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.961446Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.961464Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.961479Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.961494Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.961512Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.961524Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.961540Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.961555Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.961583Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.961602Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.961625Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.961640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.961668Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.961689Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.961705Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.961718Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.961730Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.961748Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.961764Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.961782Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.961796Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.961814Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.961829Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.961844Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.961860Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.961876Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.961897Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.961912Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.961924Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.961936Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.961948Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.961960Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.961972Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.962023Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.962060Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.962077Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.962092Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.962108Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.962125Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.962137Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.962153Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.962168Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.962198Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.962216Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.962238Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.962254Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.962281Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.962302Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.962319Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.962332Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.962344Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.962361Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.962376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.962395Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.962410Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.962428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.962444Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.962458Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.962474Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.962487Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.962505Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.962518Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.962530Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.962543Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.962554Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.962566Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.962578Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.962630Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.962667Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.962684Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.962699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.962714Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.962731Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.962743Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.962759Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.962774Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.962803Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.962822Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.962844Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.962860Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.962886Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.962908Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.962925Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.962938Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.962950Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.962968Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.962983Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.963002Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.963016Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.963033Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.963049Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.963063Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.963078Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.963092Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.963109Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.963123Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.963135Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.963147Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.963159Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.963171Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.963183Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.963233Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.963270Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.963287Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.963302Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.963318Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.963335Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.963347Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.963362Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.963379Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.963408Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.963427Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.963449Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.963464Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.963493Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.963514Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.963530Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.963544Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.963555Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.963573Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.963589Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.963607Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.963621Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.963638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.963654Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.963668Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.963683Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.963697Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.963714Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.963728Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.963740Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.963752Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.963764Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.963776Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.963788Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.963840Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.963880Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.963897Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.963912Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.963931Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.963945Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.963957Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.963972Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.963987Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.964027Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.964046Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.964068Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.964084Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.964112Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.964132Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.964149Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.964162Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.964174Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.964191Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.964207Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.964225Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.964240Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.964257Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.964273Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.964287Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.964303Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.964317Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.964334Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.964369Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.964382Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.964395Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.964407Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.964418Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.964430Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.964484Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.964521Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.964538Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.964554Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.964569Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.964582Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.964594Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.964610Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.964624Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.964654Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.964672Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.964694Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.964710Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.964737Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.964757Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.964774Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.964787Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.964799Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.964816Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.964832Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.964850Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.964866Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.964884Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.964899Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.964914Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.964929Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.964943Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.964960Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.964974Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.964986Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.964998Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.965010Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.965022Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.965033Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.965086Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.965123Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.965140Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.965156Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.965171Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.965184Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.965196Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.965212Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.965226Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.965258Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.965277Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.965297Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.965312Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.965339Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.965360Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.965376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.965391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.965403Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.965420Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.965436Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.965454Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.965468Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.965486Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.965501Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.965515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.965531Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.965545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.965562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.965576Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.965588Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.965600Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.965612Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.965623Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.965635Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.965689Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.965727Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.965744Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.965758Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.965774Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.965787Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.965799Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.965814Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.965832Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.965861Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.965882Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.965902Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.965918Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.965945Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.965964Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.965981Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.965994Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.966006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.966023Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.966039Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.966058Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.966072Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.966089Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.966105Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.966120Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.966135Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.966149Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.966166Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.966180Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.966192Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.966204Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.966216Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.966227Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.966239Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.966291Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.966330Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.966347Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.966363Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.966379Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.966397Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.966409Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.966424Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.966439Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.966467Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.966487Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.966506Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.966521Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.966548Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.966568Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.966584Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.966598Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.966610Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.966627Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.966642Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.966661Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.966675Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.966692Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.966708Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.966722Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.966738Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.966752Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.966769Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.966783Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.966795Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.966809Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.966821Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.966833Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.966845Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.966897Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.966934Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.966951Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.966965Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.966981Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.966998Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.967010Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.967026Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.967040Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.967068Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.967087Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.967108Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.967124Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.967149Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.967169Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.967185Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.967199Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.967210Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.967228Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.967244Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.967262Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.967278Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.967295Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.967312Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.967327Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.967343Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.967357Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.967374Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.967388Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.967400Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.967412Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.967424Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.967436Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.967448Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.967500Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.967537Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.967554Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.967569Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.967584Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.967602Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.967614Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.967629Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.967644Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.967672Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.967690Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.967712Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.967728Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.967754Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.967775Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.967791Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.967804Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.967816Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.967836Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.967852Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.967870Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.967884Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.967902Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.967918Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.967932Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.967948Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.967961Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.967978Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.967992Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.968005Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.968017Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.968029Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.968041Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.968053Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.968105Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.968143Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.968159Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.968174Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.968190Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.968207Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.968219Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.968235Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.968249Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.968279Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.968298Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.968322Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.968338Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.968366Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.968386Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.968403Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.968416Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.968428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.968445Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.968461Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.968480Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.968493Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.968511Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.968526Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.968540Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.968556Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.968569Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.968586Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.968600Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.968612Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.968624Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.968636Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.968648Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.968659Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.968711Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.968748Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.968765Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.968779Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.968795Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.968813Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.968825Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.968841Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.968855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.968885Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.968904Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.968926Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.968942Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.968969Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.968989Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.969006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.969019Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.969031Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.969048Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.969064Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.969082Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.969096Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.969114Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.969129Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.969144Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.969160Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.969173Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.969191Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.969205Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.969217Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.969229Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.969241Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.969255Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.969267Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.969317Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.969354Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.969371Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.969386Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.969401Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.969418Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.969430Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.969446Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.969461Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.969504Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.969523Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.969545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.969561Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.969588Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.969609Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.969625Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.969638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.969650Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.969667Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.969688Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.969707Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.969721Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.969738Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.969753Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.969767Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.969785Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.969799Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.969816Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.969830Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.969842Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.969854Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.969866Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.969878Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.969890Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.969940Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.969977Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.969994Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.970009Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.970024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.970042Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.970054Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.970069Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.970084Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.970114Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.970133Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.970165Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.970181Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.970208Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.970228Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.970245Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.970258Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.970270Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.970287Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.970303Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.970323Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.970337Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.970355Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.970370Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.970384Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.970400Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.970414Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.970431Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.970445Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.970457Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.970469Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.970481Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.970493Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.970505Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.970559Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.970597Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.970613Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.970628Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.970644Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.970657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.970669Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.970684Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.970699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.970730Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.970748Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.970771Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.970787Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.970823Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.970852Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.970874Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.970893Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.970911Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.970937Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.970958Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.970985Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.971005Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.971030Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.971053Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.971074Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.971095Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.971115Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.971134Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.971148Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.971160Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.971173Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.971184Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.971196Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.971208Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.971262Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.971300Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.971317Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.971332Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.971347Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.971361Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.971372Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.971389Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.971405Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.971436Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.971457Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.971477Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.971493Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.971520Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.971541Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.971557Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.971570Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.971582Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.971599Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.971615Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.971633Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.971648Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.971665Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.971681Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.971695Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.971711Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.971724Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.971741Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.971755Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.971767Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.971779Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.971791Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.971803Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.971814Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.971869Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.971909Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.971926Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.971941Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.971957Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.971970Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.971982Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.971998Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.972016Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.972046Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.972066Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.972085Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.972101Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.972129Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.972149Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.972166Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.972179Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.972191Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.972209Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.972225Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.972244Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.972258Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.972275Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.972291Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.972306Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.972322Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.972354Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.972373Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.972387Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.972400Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.972412Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.972425Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.972437Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.972449Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.972504Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.972542Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.972559Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.972574Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.972590Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.972607Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.972619Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.972635Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.972650Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.972679Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.972698Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.972718Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.972734Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.972761Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.972781Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.972798Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.972812Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.972825Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.972842Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.972858Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.972876Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.972892Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.972911Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.972926Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.972941Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.972957Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.972970Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.972988Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.973001Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.973014Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.973026Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.973038Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.973050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.973062Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.973117Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.973155Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.973173Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.973188Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.973203Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.973221Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.973233Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.973249Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.973264Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.973294Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.973313Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.973332Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.973349Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.973376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.973396Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.973415Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.973428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.973440Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.973458Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.973474Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.973494Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.973508Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.973526Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.973542Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.973557Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.973573Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.973587Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.973604Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.973618Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.973631Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.973643Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.973655Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.973666Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.973678Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.973730Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.973767Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.973784Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.973799Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.973814Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.973831Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.973843Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.973859Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.973875Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.973905Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.973923Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.973946Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.973962Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.973989Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.974009Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.974026Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.974040Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.974052Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.974069Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.974085Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.974103Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.974118Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.974135Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.974151Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.974166Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.974181Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.974195Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.974212Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.974226Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.974238Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.974250Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.974262Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.974274Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.974286Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.974336Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.974374Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.974393Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.974409Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.974425Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.974443Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.974455Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.974471Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.974485Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.974515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.974534Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.974556Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.974572Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.974599Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.974619Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.974636Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.974649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.974661Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.974678Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.974694Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.974712Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.974726Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.974744Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.974760Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.974775Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.974791Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.974804Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.974821Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.974837Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.974850Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.974862Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.974874Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.974886Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.974898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.974948Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.974986Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.975003Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.975018Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.975033Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.975051Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.975063Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.975079Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.975126Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.975158Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.975177Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.975199Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.975215Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.975243Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.975264Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.975280Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.975293Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.975305Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.975323Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.975339Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.975358Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.975372Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.975391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.975407Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.975422Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.975438Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.975452Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.975469Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.975483Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.975496Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.975508Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.975520Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.975532Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.975544Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.975596Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.975634Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.975651Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.975665Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.975681Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.975698Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.975710Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.975726Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.975741Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.975771Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.975789Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.975811Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.975827Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.975854Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.975875Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.975891Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.975905Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.975919Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.975937Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.975953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.975972Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.975986Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.976004Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.976019Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.976034Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.976050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.976063Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.976081Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.976095Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.976108Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.976120Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.976132Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.976144Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.976156Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.976208Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.976245Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.976263Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.976278Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.976294Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.976312Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.976324Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.976340Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.976355Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.976385Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.976406Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.976428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.976444Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.976472Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.976492Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.976508Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.976522Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.976534Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.976552Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.976567Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.976586Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.976600Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.976617Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.976633Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.976647Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.976663Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.976677Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.976694Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.976708Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.976720Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.976732Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.976744Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.976756Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.976768Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.976818Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.976854Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.976872Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.976900Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.976919Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.976934Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.976946Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.976962Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.976977Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.977006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.977024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.977046Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.977062Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.977089Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.977109Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.977126Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.977139Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.977151Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.977168Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.977184Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.977202Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.977216Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.977234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.977249Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.977264Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.977279Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.977293Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.977310Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.977324Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.977336Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.977351Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.977363Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.977375Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.977387Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.977439Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.977477Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.977494Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.977512Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.977528Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.977541Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.977554Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.977570Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.977585Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.977615Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.977639Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.977660Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.977676Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.977703Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.977723Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.977740Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.977753Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.977765Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.977782Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.977799Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.977820Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.977835Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.977853Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.977869Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.977885Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.977902Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.977916Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.977933Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.977947Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.977960Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.977972Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.978029Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.978064Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.978080Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.978144Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.978184Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.978201Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.978217Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.978235Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.978248Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.978260Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.978277Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.978292Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.978325Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.978345Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.978364Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.978380Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.978408Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.978428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.978444Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.978458Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.978470Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.978521Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.978552Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.978575Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.978591Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.978609Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.978626Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.978640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.978657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.978671Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.978689Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.978707Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.978720Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.978732Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.978744Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.978756Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.978768Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.978829Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.978869Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.978886Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.978901Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.978916Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.978930Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.978942Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.978957Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.978975Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.979005Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.979024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.979044Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.979062Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.979090Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.979111Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.979127Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.979141Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.979153Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.979170Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.979186Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.979205Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.979219Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.979236Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.979252Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.979267Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.979282Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.979296Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.979313Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.979327Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.979340Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.979352Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.979364Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.979376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.979388Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.979441Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.979478Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.979496Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.979511Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.979526Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.979545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.979557Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.979573Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.979588Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.979627Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.979646Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.979666Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.979682Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.979709Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.979730Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.979746Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.979759Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.979771Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.979789Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.979805Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.979823Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.979844Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.979866Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.979882Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.979897Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.979913Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.979927Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.979944Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.979958Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.979970Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.979982Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.979994Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.980008Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.980020Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.980074Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.980112Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.980129Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.980144Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.980159Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.980176Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.980188Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.980204Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.980219Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.980247Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.980266Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.980287Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.980303Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.980330Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.980350Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.980367Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.980380Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.980392Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.980410Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.980425Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.980444Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.980458Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.980477Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.980492Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.980507Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.980543Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.980557Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.980575Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.980589Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.980601Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.980613Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.980625Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.980637Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.980649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.980704Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.980741Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.980758Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.980773Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.980788Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.980806Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.980818Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.980833Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.980848Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.980883Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.980905Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.980929Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.980945Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.980972Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.980992Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.981009Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.981022Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.981034Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.981052Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.981067Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.981086Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.981101Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.981119Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.981135Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.981150Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.981167Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.981180Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.981197Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.981211Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.981224Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.981236Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.981248Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.981260Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.981272Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.981323Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.981360Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.981376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.981391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.981406Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.981423Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.981435Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.981451Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.981465Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.981494Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.981513Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.981535Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.981551Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.981577Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.981599Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.981615Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.981628Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.981640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.981657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.981673Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.981691Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.981705Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.981722Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.981737Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.981752Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.981767Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.981781Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.981797Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.981811Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.981823Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.981835Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.981847Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.981859Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.981870Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.981920Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.981960Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.981977Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.981992Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.982007Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.982025Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.982037Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.982054Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.982069Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.982099Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.982118Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.982139Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.982155Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.982181Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.982201Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.982217Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.982231Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.982242Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.982260Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.982275Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.982294Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.982308Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.982325Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.982341Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.982355Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.982371Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.982385Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.982402Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.982416Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.982428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.982440Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.982452Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.982464Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.982476Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.982525Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.982564Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.982581Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.982596Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.982611Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.982628Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.982640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.982655Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.982670Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.982699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.982717Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.982739Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.982754Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.982781Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.982801Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.982817Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.982830Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.982842Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.982859Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.982874Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.982892Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.982906Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.982923Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.982938Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.982952Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.982968Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.982981Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.983000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.983014Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.983026Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.983038Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.983050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.983062Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.983074Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.983124Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.983161Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.983177Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.983192Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.983211Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.983225Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.983237Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.983252Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.983267Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.983296Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.983315Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.983336Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.983352Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.983378Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.983398Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.983414Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.983427Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.983439Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.983456Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.983472Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.983490Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.983505Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.983523Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.983538Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.983553Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.983568Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.983582Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.983599Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.983612Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.983625Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.983637Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.983649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.983661Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.983673Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.983724Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.983762Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.983778Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.983793Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.983809Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.983822Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.983834Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.983849Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.983864Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.983893Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.983914Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.983932Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.983948Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.984003Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.984024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.984042Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.984055Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.984067Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.984084Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.984100Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.984118Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.984132Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.984148Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.984163Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.984178Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.984193Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.984206Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.984223Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.984236Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.984249Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.984261Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.984272Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.984284Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.984296Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.984347Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.984384Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.984401Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.984416Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.984431Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.984444Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.984456Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.984471Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.984486Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.984519Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.984539Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.984557Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.984573Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.984600Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.984620Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.984636Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.984649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.984660Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.984677Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.984693Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.984711Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.984725Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.984742Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.984757Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.984772Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.984787Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.984801Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.984817Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.984831Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.984843Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.984855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.984867Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.984878Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.984890Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.984942Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.984978Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.984997Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.985012Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.985028Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.985041Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.985052Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.985068Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.985085Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.985114Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.985137Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.985160Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.985176Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.985202Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.985222Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.985239Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.985252Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.985264Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.985282Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.985298Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.985316Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.985332Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.985349Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.985364Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.985379Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.985395Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.985408Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.985425Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.985439Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.985454Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.985466Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.985478Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.985490Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.985502Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.985555Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.985592Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.985610Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.985625Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.985641Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.985719Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.985744Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.985773Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.985799Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.985847Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.985876Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.985905Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.985929Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.985971Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.986002Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.986027Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.986048Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.986066Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.986109Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.986137Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.986160Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.986176Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.986200Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.986226Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.986247Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.986271Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.986291Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.986318Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.986338Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.986357Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.986374Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.986391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.986409Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.986426Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.986512Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.986561Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.986584Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.986601Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.986617Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.986636Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.986648Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.986664Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.986681Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.986709Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.986743Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.986769Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.986786Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.986816Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.986837Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.986853Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.986867Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.986880Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.986898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.986914Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.986933Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.986947Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.986964Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.986980Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.986995Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.987011Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.987024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.987042Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.987056Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.987068Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.987080Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.987092Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.987106Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.987118Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.987171Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.987217Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.987236Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.987251Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.987267Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.987284Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.987297Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.987313Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.987329Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.987360Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.987379Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.987402Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.987419Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.987447Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.987468Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.987484Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.987497Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.987509Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.987527Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.987543Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.987562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.987576Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.987593Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.987609Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.987623Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.987639Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.987653Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.987670Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.987684Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.987696Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.987709Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.987720Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.987732Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.987744Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.987795Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.987833Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.987850Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.987865Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.987884Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.987902Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.987914Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.987930Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.987944Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.987974Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.987993Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.988025Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.988051Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.988094Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.988129Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.988153Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.988174Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.988197Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.988228Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.988261Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.988283Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.988298Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.988319Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.988336Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.988351Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.988367Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.988380Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.988398Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.988411Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.988424Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.988436Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.988450Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.988462Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.988474Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.988529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.988568Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.988584Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.988599Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.988615Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.988632Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.988645Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.988660Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.988675Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.988704Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.988723Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.988745Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.988761Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.988789Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.988809Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.988826Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.988839Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.988851Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.988868Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.988884Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.988903Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.988917Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.988934Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.988950Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.988985Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.989002Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.989016Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.989033Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.989047Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.989059Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.989071Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.989083Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.989095Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.989107Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.989158Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.989195Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.989211Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.989226Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.989244Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.989261Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.989273Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.989289Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.989303Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.989334Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.989352Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.989373Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.989389Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.989416Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.989436Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.989452Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.989465Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.989477Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.989493Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.989511Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.989529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.989543Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.989560Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.989576Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.989590Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.989606Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.989619Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.989637Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.989651Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.989663Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.989676Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.989687Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.989699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.989711Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.989762Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.989799Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.989816Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.989830Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.989848Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.989862Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.989874Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.989890Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.989905Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.989935Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.989953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.989975Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.989991Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.990019Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.990040Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.990056Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.990069Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.990081Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.990098Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.990114Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.990133Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.990146Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.990164Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.990179Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.990194Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.990210Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.990223Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.990240Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.990254Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.990266Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.990278Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.990290Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.990302Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.990314Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.990366Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.990403Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.990420Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.990434Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.990449Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.990462Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.990476Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.990492Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.990506Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.990536Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.990555Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.990576Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.990592Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.990618Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.990638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.990655Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.990668Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.990680Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.990697Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.990712Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.990731Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.990744Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.990761Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.990777Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.990791Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.990806Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.990820Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.990837Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.990851Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.990863Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.990875Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.990887Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.990898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.990912Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.990964Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.991002Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.991019Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.991034Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.991050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.991063Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.991075Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.991091Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.991106Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.991137Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.991156Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.991175Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.991191Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.991218Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.991238Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.991254Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.991267Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.991279Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.991297Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.991312Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.991331Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.991344Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.991361Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.991377Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.991391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.991406Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.991421Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.991438Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.991452Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.991464Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.991476Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.991488Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.991500Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.991512Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.991564Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.991600Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.991617Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.991632Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.991647Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.991660Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.991672Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.991687Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.991705Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.991733Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.991752Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.991787Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.991806Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.991835Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.991855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.991873Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.991886Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.991898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.991915Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.991933Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.991952Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.991968Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.991985Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.992001Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.992015Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.992031Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.992045Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.992062Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.992075Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.992087Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.992099Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.992111Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.992123Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.992134Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.992187Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.992224Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.992241Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.992256Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.992272Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.992289Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.992301Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.992317Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.992332Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.992360Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.992380Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.992398Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.992414Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.992441Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.992463Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.992480Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.992493Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.992505Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.992523Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.992539Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.992557Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.992571Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.992588Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.992603Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.992618Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.992634Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.992647Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.992664Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.992678Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.992690Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.992702Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.992714Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.992726Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.992738Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.992791Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.992829Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.992853Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.992874Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.992891Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.992909Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.992921Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.992938Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.992954Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.992984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.993003Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.993024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.993040Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.993078Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.993099Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.993115Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.993128Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.993140Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.993157Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.993173Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.993191Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.993205Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.993222Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.993237Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.993252Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.993268Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.993281Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.993298Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.993312Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.993324Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.993336Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.993348Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.993360Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.993372Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.993423Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.993462Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.993484Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.993500Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.993516Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.993534Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.993546Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.993561Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.993576Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.993605Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.993623Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.993645Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.993660Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.993687Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.993707Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.993724Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.993737Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.993749Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.993766Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.993782Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.993800Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.993814Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.993832Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.993847Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.993862Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.993877Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.993891Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.993908Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.993924Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.993937Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.993949Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.993961Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.993973Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.993985Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.994035Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.994077Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.994094Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.994109Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.994125Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.994145Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.994158Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.994175Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.994191Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.994222Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.994240Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.994261Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.994277Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.994304Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.994324Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.994341Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.994354Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.994366Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.994384Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.994399Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.994417Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.994431Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.994450Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.994466Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.994481Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.994496Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.994510Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.994527Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.994541Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.994553Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.994565Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.994577Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.994588Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.994600Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.994650Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.994692Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.994709Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.994724Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.994740Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.994758Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.994770Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.994785Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.994800Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.994830Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.994849Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.994870Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.994886Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.994913Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.994933Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.994949Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.994964Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.994976Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.994994Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.995010Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.995028Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.995046Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.995068Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.995084Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.995098Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.995114Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.995128Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.995146Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.995160Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.995172Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.995184Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.995196Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.995208Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.995220Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.995271Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.995308Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.995325Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.995340Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.995356Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.995373Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.995385Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.995400Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.995420Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.995452Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.995473Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.995496Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.995512Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.995539Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.995588Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.995623Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.995648Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.995668Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.995743Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.995778Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.995802Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.995818Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.995837Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.995854Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.995869Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.995887Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.995901Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.995919Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.995934Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.995947Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.995959Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.995971Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.995984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.995996Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.996097Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.996153Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.996175Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.996195Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.996214Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.996234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.996247Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.996265Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.996281Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.996313Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.996332Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.996356Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.996373Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.996402Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.996424Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.996440Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.996454Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.996467Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.996485Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.996502Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.996521Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.996536Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.996554Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.996570Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.996585Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.996601Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.996616Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.996634Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.996648Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.996661Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.996675Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.996688Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.996701Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.996713Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.996769Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.996807Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.996826Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.996841Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.996857Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.996871Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.996883Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.996898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.996913Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.996944Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.996963Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.996987Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.997003Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.997031Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.997052Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.997069Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.997083Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.997095Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.997113Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.997129Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.997148Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.997163Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.997181Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.997218Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.997234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.997252Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.997266Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.997284Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.997301Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.997314Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.997327Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.997339Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.997351Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.997363Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.997418Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.997457Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.997475Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.997490Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.997506Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.997519Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.997547Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.997586Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.997607Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.997647Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.997667Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.997688Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.997704Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.997732Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.997753Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.997769Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.997783Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.997795Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.997815Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.997832Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.997851Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.997865Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.997883Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.997900Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.997914Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.997930Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.997944Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.997961Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.997976Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.997988Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.998000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.998012Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.998024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.998036Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.998093Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.998133Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.998150Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.998165Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.998181Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.998195Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.998207Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.998222Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.998241Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.998270Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.998290Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.998309Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.998326Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.998354Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.998374Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.998391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.998404Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.998416Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.998433Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.998449Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.998467Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.998482Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.998499Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.998515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.998529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.998545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.998559Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.998576Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.998590Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.998602Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.998614Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.998626Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.998638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.998650Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.998702Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.998740Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.998757Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.998772Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.998788Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.998807Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.998819Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.998835Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.998850Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.998878Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.998897Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.998916Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.998932Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.998959Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.998979Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.998995Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.999009Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.999021Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.999038Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.999054Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.999072Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.999086Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.999104Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.999119Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.999134Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.999149Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.999163Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.999180Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.999194Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.999206Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.999218Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.999230Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.999244Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.999256Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.999309Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.999347Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.999364Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.999379Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:42.999395Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:42.999412Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:42.999424Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:42.999440Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:42.999455Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:42.999483Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.999502Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:42.999521Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.999536Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:42.999563Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:42.999583Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.999599Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:42.999612Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:42.999624Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:42.999642Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:42.999657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:42.999676Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:42.999690Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:42.999707Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:42.999724Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:42.999739Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:42.999756Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:42.999770Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:42.999788Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:42.999802Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:42.999814Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:42.999826Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:42.999838Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:42.999851Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:42.999863Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:42.999916Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:42.999953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:42.999970Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:42.999985Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.000000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.000017Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.000030Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.000046Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.000060Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.000088Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.000107Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.000129Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.000145Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.000172Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.000192Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.000208Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.000222Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.000234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.000251Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.000266Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.000286Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.000301Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.000319Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.000334Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.000348Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.000364Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.000378Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.000395Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.000408Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.000421Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.000433Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.000445Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.000457Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.000469Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.000519Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.000556Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.000573Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.000588Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.000603Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.000620Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.000632Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.000647Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.000662Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.000720Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.000740Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.000762Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.000778Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.000805Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.000827Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.000844Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.000858Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.000870Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.000887Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.000903Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.000921Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.000935Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.000952Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.000968Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.000982Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.000998Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.001012Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.001029Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.001043Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.001056Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.001068Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.001080Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.001092Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.001104Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.001155Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.001192Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.001209Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.001224Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.001240Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.001257Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.001269Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.001286Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.001301Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.001341Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.001360Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.001381Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.001397Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.001423Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.001443Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.001459Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.001473Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.001485Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.001502Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.001517Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.001536Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.001550Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.001567Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.001583Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.001597Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.001613Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.001626Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.001643Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.001657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.001669Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.001681Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.001693Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.001705Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.001717Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.001769Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.001806Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.001823Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.001838Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.001853Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.001870Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.001883Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.001898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.001913Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.001941Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.001960Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.001984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.002000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.002027Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.002047Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.002063Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.002077Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.002089Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.002106Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.002122Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.002140Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.002154Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.002171Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.002186Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.002201Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.002216Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.002230Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.002249Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.002263Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.002276Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.002288Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.002300Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.002312Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.002324Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.002373Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.002411Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.002428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.002443Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.002458Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.002476Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.002488Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.002504Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.002519Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.002548Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.002566Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.002587Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.002603Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.002630Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.002651Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.002667Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.002680Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.002692Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.002710Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.002725Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.002743Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.002759Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.002777Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.002792Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.002806Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.002822Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.002836Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.002853Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.002867Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.002879Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.002892Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.002904Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.002916Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.002927Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.002978Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.003015Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.003032Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.003047Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.003066Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.003080Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.003092Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.003107Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.003122Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.003152Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.003170Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.003192Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.003208Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.003236Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.003256Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.003274Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.003288Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.003300Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.003317Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.003333Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.003352Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.003366Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.003383Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.003399Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.003413Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.003429Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.003443Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.003460Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.003474Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.003487Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.003499Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.003510Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.003522Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.003534Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.003586Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.003626Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.003643Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.003658Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.003673Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.003687Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.003699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.003714Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.003729Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.003762Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.003783Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.003802Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.003818Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.003846Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.003866Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.003882Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.003896Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.003908Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.003925Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.003941Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.003959Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.003973Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.003991Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.004006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.004020Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.004036Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.004050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.004067Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.004081Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.004093Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.004105Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.004117Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.004129Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.004141Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.004192Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.004230Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.004249Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.004264Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.004280Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.004293Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.004305Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.004321Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.004336Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.004368Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.004387Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.004414Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.004434Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.004461Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.004482Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.004498Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.004512Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.004524Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.004541Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.004557Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.004575Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.004589Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.004607Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.004622Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.004637Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.004652Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.004666Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.004683Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.004697Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.004711Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.004723Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.004735Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.004747Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.004759Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.004810Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.004848Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.004865Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.004880Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.004895Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.004908Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.004920Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.004935Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.004953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.004981Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.005001Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.005019Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.005035Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.005061Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.005081Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.005097Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.005110Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.005122Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.005140Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.005156Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.005174Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.005188Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.005226Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.005243Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.005258Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.005274Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.005288Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.005305Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.005319Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.005331Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.005343Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.005355Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.005367Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.005379Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.005432Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.005469Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.005486Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.005501Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.005516Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.005533Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.005545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.005561Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.005576Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.005604Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.005622Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.005641Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.005657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.005683Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.005704Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.005720Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.005737Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.005752Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.005770Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.005787Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.005805Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.005819Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.005836Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.005852Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.005866Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.005882Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.005895Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.005912Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.005926Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.005939Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.005951Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.005963Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.005975Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.005987Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.006039Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.006076Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.006093Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.006108Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.006124Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.006141Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.006153Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.006169Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.006183Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.006211Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.006231Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.006253Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.006269Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.006295Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.006316Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.006332Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.006345Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.006357Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.006374Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.006390Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.006408Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.006422Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.006440Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.006455Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.006469Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.006485Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.006499Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.006516Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.006530Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.006542Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.006554Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.006566Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.006578Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.006590Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.006639Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.006676Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.006693Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.006710Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.006726Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.006743Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.006755Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.006770Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.006786Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.006815Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.006833Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.006855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.006870Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.006897Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.006918Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.006934Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.006947Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.006959Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.006976Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.006992Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.007010Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.007024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.007042Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.007057Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.007072Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.007087Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.007101Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.007118Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.007131Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.007144Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.007156Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.007169Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.007182Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.007193Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.007243Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.007280Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.007297Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.007312Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.007327Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.007344Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.007357Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.007372Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.007387Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.007417Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.007435Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.007456Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.007472Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.007510Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.007530Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.007547Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.007560Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.007572Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.007589Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.007605Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.007624Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.007638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.007655Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.007671Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.007687Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.007703Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.007717Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.007734Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.007748Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.007760Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.007772Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.007784Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.007796Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.007808Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.007857Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.007894Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.007911Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.007926Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.007942Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.007959Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.007972Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.007987Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.008002Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.008031Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.008050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.008072Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.008087Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.008114Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.008134Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.008151Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.008164Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.008176Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.008193Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.008211Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.008230Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.008244Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.008261Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.008277Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.008291Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.008307Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.008321Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.008338Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.008352Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.008364Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.008376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.008388Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.008400Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.008412Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.008539Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.008584Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.008603Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.008620Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.008639Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.008657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.008669Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.008686Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.008701Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.008732Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.008751Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.008773Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.008792Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.008821Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.008843Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.008859Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.008873Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.008885Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.008903Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.008919Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.008938Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.008953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.008971Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.008987Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.009002Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.009018Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.009032Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.009050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.009064Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.009076Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.009089Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.009101Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.009113Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.009125Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.009177Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.009214Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.009231Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.009250Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.009270Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.009284Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.009298Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.009315Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.009330Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.009360Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.009378Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.009400Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.009416Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.009477Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.009505Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.009526Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.009540Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.009552Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.009570Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.009586Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.009604Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.009618Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.009636Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.009652Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.009666Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.009682Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.009695Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.009712Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.009726Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.009738Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.009750Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.009762Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.009775Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.009788Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.009843Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.009881Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.009899Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.009913Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.009929Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.009942Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.009954Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.009969Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.009984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.010014Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.010035Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.010054Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.010070Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.010097Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.010124Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.010142Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.010155Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.010167Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.010185Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.010201Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.010219Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.010233Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.010250Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.010266Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.010280Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.010296Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.010311Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.010329Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.010343Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.010355Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.010368Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.010380Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.010391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.010403Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.010457Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.010495Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.010513Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.010528Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.010543Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.010557Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.010568Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.010584Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.010599Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.010631Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.010650Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.010669Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.010685Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.010784Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.010827Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.010849Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.010864Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.010877Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.010896Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.010913Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.010933Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.010950Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.010969Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.010986Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.011001Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.011017Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.011031Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.011049Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.011063Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.011075Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.011088Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.011100Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.011112Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.011124Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.011185Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.011225Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.011242Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.011257Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.011273Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.011286Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.011298Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.011313Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.011331Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.011371Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.011390Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.011409Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.011425Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.011453Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.011475Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.011492Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.011505Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.011518Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.011559Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.011592Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.011614Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.011630Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.011649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.011664Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.011679Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.011695Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.011708Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.011726Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.011740Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.011753Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.011772Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.011785Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.011797Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.011809Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.011869Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.011909Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.011926Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.011940Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.011956Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.011973Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.011985Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.012000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.012018Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.012049Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.012068Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.012088Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.012103Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.012131Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.012151Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.012167Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.012180Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.012192Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.012209Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.012225Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.012243Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.012257Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.012274Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.012292Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.012306Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.012322Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.012335Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.012352Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.012366Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.012378Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.012390Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.012401Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.012413Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.012424Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.012477Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.012516Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.012532Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.012547Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.012562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.012579Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.012590Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.012606Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.012620Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.012648Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.012666Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.012687Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.012703Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.012729Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.012749Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.012765Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.012778Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.012789Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.012806Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.012822Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.012840Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.012853Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.012871Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.012886Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.012900Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.012916Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.012929Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.012947Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.012961Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.012973Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.012985Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.012997Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.013008Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.013020Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.013069Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.013106Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.013122Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.013137Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.013152Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.013169Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.013181Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.013196Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.013211Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.013238Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.013257Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.013279Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.013295Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.013321Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.013341Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.013357Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.013370Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.013381Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.013398Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.013414Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.013432Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.013465Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.013484Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.013499Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.013513Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.013529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.013542Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.013559Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.013573Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.013585Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.013597Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.013608Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.013620Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.013632Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.013682Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.013719Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.013735Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.013749Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.013764Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.013781Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.013793Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.013808Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.013823Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.013852Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.013870Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.013891Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.013907Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.013933Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.013953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.013970Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.013984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.013996Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.014013Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.014029Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.014047Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.014060Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.014077Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.014093Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.014106Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.014122Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.014135Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.014151Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.014165Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.014177Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.014189Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.014201Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.014212Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.014224Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.014274Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.014311Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.014327Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.014342Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.014357Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.014373Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.014385Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.014401Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.014415Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.014445Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.014463Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.014484Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.014500Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.014527Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.014546Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.014562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.014576Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.014587Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.014604Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.014620Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.014638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.014652Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.014669Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.014684Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.014698Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.014713Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.014726Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.014743Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.014757Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.014768Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.014780Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.014792Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.014804Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.014815Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.014865Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.014901Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.014919Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.014934Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.014949Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.014966Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.014978Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.014993Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.015007Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.015036Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.015054Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.015075Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.015090Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.015116Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.015136Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.015152Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.015165Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.015177Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.015193Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.015209Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.015227Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.015240Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.015257Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.015273Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.015287Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.015302Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.015316Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.015332Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.015346Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.015360Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.015372Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.015384Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.015396Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.015408Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.015457Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.015494Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.015510Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.015525Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.015543Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.015556Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.015568Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.015583Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.015598Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.015627Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.015645Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.015666Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.015681Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.015707Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.015727Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.015743Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.015756Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.015768Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.015785Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.015800Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.015818Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.015832Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.015849Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.015866Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.015880Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.015895Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.015909Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.015925Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.015939Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.015951Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.015963Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.015974Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.015986Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.015998Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.016050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.016087Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.016103Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.016118Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.016133Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.016146Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.016158Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.016173Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.016187Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.016216Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.016234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.016255Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.016270Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.016297Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.016316Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.016332Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.016345Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.016357Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.016376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.016392Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.016410Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.016423Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.016440Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.016456Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.016470Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.016485Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.016498Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.016515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.016529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.016540Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.016552Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.016564Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.016575Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.016587Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.016639Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.016675Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.016692Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.016707Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.016722Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.016735Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.016747Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.016762Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.016776Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.016807Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.016826Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.016846Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.016862Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.016889Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.016908Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.016924Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.016937Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.016949Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.016966Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.016981Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.016999Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.017013Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.017030Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.017045Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.017059Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.017074Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.017088Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.017104Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.017118Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.017130Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.017142Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.017153Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.017165Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.017177Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.017231Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.017268Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.017285Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.017300Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.017328Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.017341Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.017353Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.017369Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.017386Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.017414Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.017433Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.017452Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.017468Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.017494Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.017514Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.017530Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.017543Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.017555Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.017573Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.017588Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.017606Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.017620Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.017637Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.017652Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.017667Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.017682Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.017696Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.017713Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.017726Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.017739Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.017751Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.017764Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.017777Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.017789Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.017868Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.017906Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.017923Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.017938Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.017953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.017970Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.017982Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.017997Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.018012Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.018040Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.018058Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.018077Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.018092Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.018118Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.018138Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.018154Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.018167Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.018179Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.018196Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.018211Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.018229Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.018243Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.018260Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.018275Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.018291Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.018307Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.018320Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.018337Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.018350Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.018362Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.018374Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.018386Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.018398Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.018410Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.018461Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.018498Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.018515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.018529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.018545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.018562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.018574Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.018591Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.018605Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.018633Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.018651Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.018672Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.018688Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.018714Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.018734Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.018750Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.018763Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.018775Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.018792Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.018807Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.018827Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.018841Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.018858Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.018873Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.018887Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.018903Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.018916Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.018933Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.018947Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.018959Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.018971Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.018982Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.018994Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.019006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.019056Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.019093Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.019109Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.019124Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.019139Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.019155Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.019167Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.019182Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.019197Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.019224Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.019242Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.019263Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.019278Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.019306Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.019326Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.019341Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.019355Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.019366Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.019383Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.019399Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.019417Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.019430Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.019448Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.019463Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.019477Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.019492Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.019506Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.019522Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.019536Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.019548Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.019560Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.019571Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.019583Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.019594Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.019644Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.019680Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.019697Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.019711Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.019726Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.019743Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.019756Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.019772Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.019787Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.019816Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.019834Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.019855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.019870Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.019897Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.019916Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.019932Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.019945Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.019957Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.019975Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.019991Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.020009Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.020023Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.020040Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.020055Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.020069Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.020084Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.020098Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.020114Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.020128Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.020140Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.020152Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.020164Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.020175Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.020189Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.020239Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.020276Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.020292Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.020307Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.020322Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.020339Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.020351Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.020367Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.020381Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.020410Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.020428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.020449Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.020465Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.020492Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.020512Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.020528Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.020541Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.020553Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.020570Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.020586Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.020604Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.020618Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.020635Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.020650Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.020665Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.020680Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.020695Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.020712Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.020726Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.020738Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.020749Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.020766Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.020778Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.020790Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.020839Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.020876Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.020892Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.020907Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.020922Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.020939Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.020951Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.020966Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.020981Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.021010Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.021029Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.021050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.021066Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.021093Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.021114Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.021130Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.021143Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.021155Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.021172Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.021188Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.021206Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.021238Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.021257Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.021273Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.021287Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.021303Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.021316Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.021333Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.021347Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.021359Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.021371Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.021383Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.021394Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.021406Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.021456Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.021493Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.021509Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.021524Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.021542Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.021556Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.021568Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.021583Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.021598Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.021630Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.021648Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.021669Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.021685Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.021711Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.021732Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.021749Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.021762Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.021774Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.021791Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.021807Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.021825Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.021839Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.021856Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.021872Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.021886Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.021902Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.021915Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.021932Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.021946Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.021959Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.021971Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.021983Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.021995Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.022006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.022061Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.022099Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.022116Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.022131Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.022147Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.022160Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.022172Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.022187Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.022204Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.022234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.022254Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.022276Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.022292Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.022319Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.022339Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.022355Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.022368Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.022380Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.022397Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.022413Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.022431Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.022445Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.022462Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.022478Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.022492Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.022508Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.022521Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.022538Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.022552Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.022564Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.022576Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.022588Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.022599Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.022611Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.022664Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.022704Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.022721Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.022736Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.022751Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.022764Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.022776Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.022791Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.022806Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.022837Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.022855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.022874Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.022890Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.022917Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.022938Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.022954Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.022967Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.022979Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.022996Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.023011Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.023030Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.023044Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.023061Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.023077Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.023091Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.023106Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.023120Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.023137Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.023152Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.023165Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.023177Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.023189Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.023200Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.023212Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.023264Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.023301Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.023318Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.023332Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.023347Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.023360Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.023372Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.023388Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.023405Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.023444Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.023463Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.023482Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.023497Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.023523Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.023543Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.023559Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.023572Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.023584Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.023601Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.023617Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.023635Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.023649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.023668Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.023684Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.023698Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.023713Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.023727Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.023744Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.023757Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.023770Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.023782Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.023793Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.023805Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.023817Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.023869Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.023906Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.023923Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.023937Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.023953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.023969Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.023981Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.023997Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.024011Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.024039Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.024057Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.024076Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.024092Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.024118Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.024138Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.024154Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.024169Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.024181Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.024198Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.024214Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.024232Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.024246Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.024264Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.024279Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.024293Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.024308Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.024322Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.024339Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.024353Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.024365Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.024377Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.024389Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.024401Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.024413Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.024465Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.024505Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.024522Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.024536Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.024552Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.024569Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.024581Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.024596Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.024611Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.024638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.024659Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.024677Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.024693Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.024719Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.024739Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.024755Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.024768Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.024780Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.024797Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.024812Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.024830Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.024844Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.024861Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.024876Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.024890Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.024906Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.024919Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.024936Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.024950Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.024962Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.024974Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.024986Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.024997Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.025009Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.025060Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.025097Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.025151Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.025191Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.025213Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.025234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.025247Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.025264Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.025281Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.025329Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.025350Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.025373Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.025390Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.025418Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.025441Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.025458Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.025472Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.025484Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.025502Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.025518Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.025537Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.025552Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.025570Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.025593Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.025608Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.025625Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.025639Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.025656Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.025671Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.025683Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.025698Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.025711Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.025723Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.025735Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.025790Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.025830Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.025848Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.025863Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.025879Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.025897Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.025909Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.025925Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.025940Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.025971Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.025990Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.026012Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.026028Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.026055Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.026077Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.026094Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.026112Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.026125Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.026144Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.026160Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.026179Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.026194Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.026212Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.026230Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.026246Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.026262Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.026276Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.026294Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.026308Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.026320Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.026333Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.026345Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.026357Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.026369Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.026423Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.026462Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.026479Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.026495Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.026511Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.026528Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.026540Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.026556Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.026571Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.026601Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.026620Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.026643Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.026659Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.026687Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.026708Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.026725Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.026738Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.026792Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.026822Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.026843Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.026864Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.026879Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.026898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.026915Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.026930Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.026946Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.026961Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.026979Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.026993Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.027006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.027019Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.027031Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.027043Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.027055Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.027112Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.027151Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.027168Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.027183Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.027199Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.027216Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.027229Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.027244Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.027259Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.027290Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.027308Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.027330Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.027349Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.027377Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.027398Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.027414Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.027428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.027440Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.027457Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.027473Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.027494Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.027508Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.027526Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.027542Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.027556Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.027572Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.027586Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.027603Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.027617Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.027629Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.027642Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.027654Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.027665Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.027677Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.027728Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.027766Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.027783Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.027798Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.027813Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.027838Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.027851Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.027867Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.027883Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.027913Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.027931Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.027953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.027969Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.027995Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.028016Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.028032Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.028045Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.028057Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.028074Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.028090Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.028108Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.028122Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.028139Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.028155Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.028169Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.028185Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.028198Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.028215Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.028229Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.028241Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.028253Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.028265Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.028279Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.028291Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.028342Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.028379Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.028396Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.028410Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.028429Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.028443Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.028455Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.028470Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.028485Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.028514Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.028532Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.028553Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.028569Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.028596Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.028616Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.028632Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.028645Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.028657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.028674Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.028690Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.028712Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.028727Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.028745Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.028761Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.028775Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.028793Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.028807Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.028824Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.028838Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.028850Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.028863Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.028874Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.028886Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.028898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.028950Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.028987Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.029004Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.029019Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.029034Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.029047Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.029059Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.029074Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.029089Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.029119Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.029139Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.029158Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.029173Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.029200Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.029220Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.029235Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.029249Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.029260Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.029277Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.029293Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.029331Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.029346Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.029363Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.029379Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.029393Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.029409Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.029422Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.029439Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.029453Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.029465Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.029476Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.029488Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.029500Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.029511Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.029563Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.029600Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.029617Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.029632Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.029647Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.029660Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.029672Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.029687Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.029702Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.029733Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.029752Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.029771Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.029786Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.029813Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.029834Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.029851Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.029864Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.029876Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.029893Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.029909Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.029927Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.029941Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.029958Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.029973Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.029993Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.030009Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.030022Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.030039Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.030053Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.030066Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.030078Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.030090Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.030101Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.030113Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.030165Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.030203Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.030220Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.030234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.030249Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.030266Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.030278Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.030296Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.030311Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.030339Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.030358Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.030376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.030392Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.030418Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.030438Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.030454Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.030467Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.030479Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.030495Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.030511Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.030529Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.030543Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.030560Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.030575Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.030589Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.030605Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.030618Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.030635Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.030649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.030661Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.030673Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.030685Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.030696Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.030708Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.030761Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.030798Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.030815Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.030829Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.030844Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.030861Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.030873Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.030888Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.030903Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.030931Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.030950Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.030968Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.030984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.031010Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.031029Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.031045Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.031058Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.031069Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.031086Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.031102Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.031120Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.031134Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.031151Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.031166Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.031180Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.031195Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.031209Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.031227Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.031241Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.031253Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.031265Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.031277Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.031289Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.031300Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.031352Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.031389Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.031406Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.031420Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.031436Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.031452Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.031464Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.031479Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.031494Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.031522Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.031540Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.031562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.031577Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.031604Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.031623Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.031639Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.031652Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.031664Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.031681Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.031697Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.031714Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.031730Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.031747Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.031762Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.031777Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.031792Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.031805Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.031822Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.031836Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.031848Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.031860Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.031872Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.031883Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.031895Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.031945Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.031981Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.031998Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.032013Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.032028Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.032045Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.032060Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.032076Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.032090Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.032131Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.032150Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.032171Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.032187Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.032214Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.032234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.032253Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.032266Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.032278Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.032295Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.032310Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.032328Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.032342Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.032359Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.032375Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.032389Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.032404Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.032418Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.032434Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.032448Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.032460Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.032472Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.032484Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.032495Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.032507Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.032557Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.032594Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.032611Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.032626Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.032641Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.032658Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.032670Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.032686Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.032700Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.032732Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.032751Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.032772Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.032788Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.032815Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.032836Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.032852Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.032865Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.032877Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.032894Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.032910Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.032928Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.032942Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.032959Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.032974Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.032989Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.033004Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.033018Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.033035Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.033048Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.033060Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.033072Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.033084Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.033096Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.033107Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.033158Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.033195Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.033213Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.033228Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.033243Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.033260Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.033272Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.033287Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.033302Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.033331Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.033349Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.033371Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.033386Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.033414Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.033434Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.033450Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.033463Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.033475Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.033492Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.033507Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.033525Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.033540Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.033557Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.033572Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.033586Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.033602Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.033615Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.033632Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.033646Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.033660Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.033672Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.033684Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.033696Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.033708Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.033758Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.033794Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.033811Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.033826Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.033841Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.033858Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.033870Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.033885Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.033900Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.033930Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.033948Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.033970Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.033985Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.034012Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.034032Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.034048Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.034061Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.034073Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.034090Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.034106Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.034123Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.034137Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.034156Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.034172Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.034186Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.034202Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.034215Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.034232Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.034246Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.034258Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.034271Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.034282Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.034294Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.034306Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.034355Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.034392Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.034409Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.034424Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.034442Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.034456Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.034468Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.034483Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.034497Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.034527Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.034545Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.034567Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.034582Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.034609Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.034629Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.034645Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.034658Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.034672Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.034689Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.034705Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.034723Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.034737Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.034754Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.034769Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.034783Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.034799Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.034812Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.034829Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.034843Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.034855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.034867Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.034878Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.034890Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.034901Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.034954Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.034990Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.035007Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.035022Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.035037Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.035050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.035062Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.035077Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.035091Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.035121Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.035145Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.035166Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.035182Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.035209Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.035229Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.035245Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.035258Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.035270Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.035287Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.035303Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.035321Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.035335Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.035352Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.035367Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.035382Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.035397Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.035411Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.035428Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.035442Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.035454Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.035466Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.035478Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.035489Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.035501Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.035583Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.035621Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.035638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.035653Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.035670Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.035684Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.035696Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.035711Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.035726Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.035758Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.035777Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.035796Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.035812Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.035839Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.035859Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.035876Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.035889Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.035901Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.035918Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.035934Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.035952Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.035966Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.035983Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.035999Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.036013Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.036029Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.036042Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.036059Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.036073Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.036085Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.036097Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.036110Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.036122Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.036134Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.036186Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.036223Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.036240Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.036255Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.036270Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.036283Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.036295Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.036310Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.036328Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.036357Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.036376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.036395Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.036410Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.036437Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.036457Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.036473Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.036486Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.036498Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.036515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.036530Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.036549Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.036562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.036580Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.036595Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.036611Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.036626Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.036640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.036657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.036670Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.036683Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.036695Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.036706Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.036718Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.036730Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.036781Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.036818Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.036835Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.036850Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.036865Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.036882Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.036894Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.036909Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.036924Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.036952Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.036970Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.036989Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.037005Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.037031Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.037051Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.037067Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.037080Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.037092Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.037109Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.037126Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.037145Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.037159Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.037176Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.037192Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.037206Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.037221Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.037235Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.037252Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.037265Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.037277Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.037290Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.037301Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.037313Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.037325Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.037376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.037413Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.037430Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.037444Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.037460Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.037477Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.037489Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.037504Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.037519Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.037547Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.037566Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.037587Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.037602Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.037630Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.037651Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.037667Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.037680Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.037691Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.037708Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.037724Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.037742Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.037756Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.037773Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.037788Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.037802Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.037818Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.037831Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.037848Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.037861Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.037873Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.037885Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.037897Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.037909Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.037921Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.037970Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.038007Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.038024Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.038038Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.038054Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.038071Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.038084Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.038100Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.038115Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.038143Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.038172Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.038194Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.038210Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.038236Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.038256Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.038272Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.038285Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.038297Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.038314Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.038330Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.038349Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.038363Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.038380Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.038396Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.038410Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.038426Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.038440Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.038456Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.038470Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.038482Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.038494Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.038506Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.038518Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.038531Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.038581Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.038618Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.038638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.038654Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.038670Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.038687Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.038699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.038714Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.038729Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.038758Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.038777Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.038799Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.038815Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.038842Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.038862Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.038878Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.038891Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.038903Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.038920Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.038935Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.038953Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.038967Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.038984Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.038999Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.039013Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.039029Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.039044Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.039061Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.039075Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.039087Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.039099Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.039111Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.039122Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.039134Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.039184Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.039221Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.039238Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.039253Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.039268Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.039285Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.039297Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.039313Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.039327Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.039356Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.039374Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.039396Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.039412Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.039438Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.039458Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.039474Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.039487Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.039498Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.039515Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.039531Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.039549Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.039564Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.039582Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.039597Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.039611Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.039627Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.039640Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.039657Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.039671Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.039683Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.039695Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.039707Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.039718Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.039730Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.039779Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.039816Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.039833Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.039847Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.039863Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.039879Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.039891Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.039906Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.039921Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.039950Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.039968Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.039990Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.040006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.040032Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.040053Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.040070Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.040083Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.040095Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.040112Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.040127Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.040145Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.040159Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.040176Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.040191Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.040205Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.040220Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.040233Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.040250Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.040263Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.040275Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.040287Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.040299Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.040311Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.040323Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.040372Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.040408Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.040425Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.040439Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.040457Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.040471Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.040483Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.040498Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.040514Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.040544Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.040562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.040583Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.040598Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.040625Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.040645Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.040661Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.040674Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.040686Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.040703Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.040718Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.040736Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.040750Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.040767Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.040782Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.040796Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.040811Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.040825Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.040841Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.040855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.040867Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.040879Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.040890Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.040902Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.040914Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.040965Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.041003Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.041020Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.041034Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.041050Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.041062Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.041074Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.041089Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.041103Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.041133Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.041154Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.041172Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.041188Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.041215Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.041234Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.041250Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.041263Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.041275Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.041292Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.041307Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.041325Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.041339Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.041356Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.041371Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.041385Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.041400Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.041413Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.041430Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.041445Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.041457Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.041469Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.041481Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.041492Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.041504Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.041555Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.041592Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.041609Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.041623Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.041638Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.041651Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.041663Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.041678Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.041693Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.041724Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.041743Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.041762Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.041895Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.041947Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.041975Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.041994Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.042008Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.042021Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.042039Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.042055Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.042075Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.042092Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.042112Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.042128Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.042147Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.042164Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.042178Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.042196Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.042210Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.042223Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.042235Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.042248Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.042260Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.042273Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.042332Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.042373Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.042391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.042406Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.042423Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.042436Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.042448Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.042464Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.042482Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.042512Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.042531Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.042551Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.042567Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.042595Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.042616Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.042632Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.042648Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.042660Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.042678Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.042694Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.042713Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.042728Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.042745Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.042761Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.042776Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.042792Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.042805Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.042823Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.042837Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.042849Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.042861Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.042873Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.042886Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.042898Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.042951Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.042989Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.043006Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.043022Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.043038Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.043056Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.043068Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.043084Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.043099Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.043130Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.043150Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.043169Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.043185Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.043213Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.043233Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.043250Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.043264Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.043276Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.043293Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.043309Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.043328Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.043342Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.043360Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.043376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.043391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.043407Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.043421Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.043439Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.043454Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.043484Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.043519Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.043535Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.043549Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.043562Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.043624Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.043664Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.043682Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.043700Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.043718Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.043736Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.043748Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.043765Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.043780Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.043809Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.043829Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.043851Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.043867Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.043896Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.043917Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.043933Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.043946Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.043958Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.043976Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.043991Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.044010Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.044025Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.044042Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.044057Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.044072Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.044088Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.044101Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.044119Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.044132Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.044145Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.044159Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.044171Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.044183Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.044195Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.044246Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.044284Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.044301Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.044315Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.044331Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.044348Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.044361Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.044376Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.044391Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.044420Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.044438Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.044461Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.044477Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.044505Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.044525Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.044541Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.044555Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.044567Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.044584Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.044600Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.044618Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.044632Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.044649Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.044667Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.044682Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.044699Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.044712Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.044729Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.044743Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.044755Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.044768Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.044780Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.044792Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.044804Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.044855Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.044892Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.044910Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.044925Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.044940Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.044958Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.044970Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.044986Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.045000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.045031Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.045051Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.045073Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.045089Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.045116Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.045137Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.045153Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.045167Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.045178Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.045197Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.045213Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.045232Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.045246Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.045263Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.045279Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.045293Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.045309Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.045322Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.045339Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.045353Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.045365Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.045377Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.045389Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.045401Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.045416Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.045478Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.045516Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.045533Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.045548Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
[2m2025-08-15T00:20:43.045563Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field main: String -> string
[2m2025-08-15T00:20:43.045580Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field hover: String -> string
[2m2025-08-15T00:20:43.045592Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field active: String -> string
[2m2025-08-15T00:20:43.045608Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field colors: Other("Colors") -> { main: string, hover: string, active: string }
[2m2025-08-15T00:20:43.045623Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct RecurrenceRule for field recurrence_rule
[2m2025-08-15T00:20:43.045652Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct DailyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.045671Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_days: U32 -> int
[2m2025-08-15T00:20:43.045695Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct WeeklyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.045712Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_weeks: U32 -> int
[2m2025-08-15T00:20:43.045740Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field weekdays: Vec(Other("Weekday")) -> array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday">
[2m2025-08-15T00:20:43.045760Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct MonthlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.045777Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_months: U32 -> int
[2m2025-08-15T00:20:43.045790Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field day: U32 -> int
[2m2025-08-15T00:20:43.045802Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field name: String -> string
[2m2025-08-15T00:20:43.045820Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct YearlyRecurrenceRule for field interval
[2m2025-08-15T00:20:43.045835Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field quantity_of_years: U32 -> int
[2m2025-08-15T00:20:43.045854Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field interval: Other("Interval") -> { quantity_of_days: int } | { quantity_of_weeks: int, weekdays: array<"Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday" | "Saturday" | "Sunday"> } | { quantity_of_months: int, day: int, name: string } | { quantity_of_years: int }
[2m2025-08-15T00:20:43.045868Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_begins: DateTime -> datetime
[2m2025-08-15T00:20:43.045885Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field recurrence_ends: Option(Other("RecurrenceEnd")) -> null | int | datetime
[2m2025-08-15T00:20:43.045900Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field cancelled_instances: Option(Vec(String)) -> null | array<string>
[2m2025-08-15T00:20:43.045915Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Appointment for field additional_instances
[2m2025-08-15T00:20:43.045931Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field id: EvenframeRecordId -> record<appointment>
[2m2025-08-15T00:20:43.045944Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field title: String -> string
[2m2025-08-15T00:20:43.045961Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field status: Other("Status") -> "Scheduled" | "OnDeck" | "Waiting"
[2m2025-08-15T00:20:43.045975Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field begins: DateTime -> datetime
[2m2025-08-15T00:20:43.045988Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field duration: Duration -> duration
[2m2025-08-15T00:20:43.046000Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field timezone: Timezone -> string
[2m2025-08-15T00:20:43.046011Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field offset_ms: I32 -> int
[2m2025-08-15T00:20:43.046023Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field all_day: Bool -> bool
[2m2025-08-15T00:20:43.046035Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field multi_day: Bool -> bool
[2m2025-08-15T00:20:43.046086Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field employees: Vec(RecordLink(Other("Employee"))) -> array<record<employee>>
[2m2025-08-15T00:20:43.046123Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field location: RecordLink(Other("Site")) -> record<site>
[2m2025-08-15T00:20:43.046140Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m   Struct field description: Option(String) -> null | string
[2m2025-08-15T00:20:43.046154Z[0m [34mDEBUG[0m [2mevenframe::types[0m[2m:[0m Processing app_struct Colors for field colors
